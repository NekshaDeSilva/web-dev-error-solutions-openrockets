
This document details how to create an expanding card effect using only CSS.  No JavaScript is required! This effect involves a card that reveals additional content when clicked. We'll use CSS transitions and transforms to achieve a smooth and visually appealing animation.

**Description of the Styling:**

The card is composed of two main elements: a front and a back.  The front displays a summary, and the back contains the expanded content.  Using CSS transitions, we smoothly animate the card's rotation on click to reveal the back.  The `transform-style: preserve-3d;` property is crucial for ensuring the 3D rotation works correctly.


**Full Code:**

```html
<!DOCTYPE html>
<html>
<head>
<title>Expanding Card</title>
<style>
.card-container {
  perspective: 1000px; /* Necessary for 3D transform effect */
  width: 300px;
  height: 200px;
}

.card {
  width: 100%;
  height: 100%;
  transition: transform 0.8s;
  transform-style: preserve-3d; /* Crucial for 3D effect */
  cursor: pointer;
}

.card.is-flipped {
  transform: rotateY(180deg);
}

.card-face {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden; /* Prevents front from being visible when flipped */
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 20px;
}

.card-front {
  background-color: #4CAF50;
  color: white;
}

.card-back {
  background-color: #f44336;
  color: white;
  transform: rotateY(180deg); /* Initially hidden on the back */
}
</style>
</head>
<body>

<div class="card-container">
  <div class="card" onclick="this.classList.toggle('is-flipped')">
    <div class="card-face card-front">
      <h2>Click Me!</h2>
      <p>Front of Card</p>
    </div>
    <div class="card-face card-back">
      <h2>Expanded Content</h2>
      <p>This is the back of the card, showing expanded content.</p>
    </div>
  </div>
</div>

</body>
</html>
```

**Explanation:**

* **`perspective`:** This property on the container creates the 3D space for the rotation.
* **`transition`:**  This smoothly animates the `transform` property over 0.8 seconds.
* **`transform-style: preserve-3d;`:** This is essential. It tells the browser to treat the children elements (`.card-face`) as 3D objects.
* **`backface-visibility: hidden;`:** This hides the back face of the card when it's not flipped.
* **`transform: rotateY(180deg);`:** This rotates the card around the Y-axis by 180 degrees to flip it.
* **`onclick="this.classList.toggle('is-flipped')"`:**  This simple JavaScript line toggles the `is-flipped` class, which applies the rotation.


**Links to Resources to Learn More:**

* **MDN Web Docs on CSS Transforms:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transform](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)
* **MDN Web Docs on CSS Transitions:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transition](https://developer.mozilla.org/en-US/docs/Web/CSS/transition)
* **CSS-Tricks (general CSS resources):** [https://css-tricks.com/](https://css-tricks.com/)


Copyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.

