
This document details how to create a visually appealing loading spinner using only CSS.  No JavaScript is required! This example utilizes CSS animations and transformations to achieve a smooth, rotating effect.


**Description of the Styling:**

This loading spinner consists of four circular elements arranged in a square.  Each element rotates independently, creating a dynamic and engaging loading animation. The styling uses `border-radius` to create the circles, `animation` for the rotation, and `transform` for positioning. The colors are easily customizable by changing the `background-color`.


**Full Code:**

```html
<!DOCTYPE html>
<html>
<head>
<title>CSS Loading Spinner</title>
<style>
.loader {
  width: 80px;
  height: 80px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.loader div {
  width: 15px;
  height: 15px;
  border-radius: 50%;
  background-color: #3498db; /* Customizable color */
  margin: 5px;
  animation: rotate 1s linear infinite;
}

.loader div:nth-child(1) {
  animation-delay: 0s;
}

.loader div:nth-child(2) {
  animation-delay: 0.25s;
}

.loader div:nth-child(3) {
  animation-delay: 0.5s;
}

.loader div:nth-child(4) {
  animation-delay: 0.75s;
}


@keyframes rotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
</style>
</head>
<body>

<div class="loader">
  <div></div>
  <div></div>
  <div></div>
  <div></div>
</div>

</body>
</html>
```


**Explanation:**

* **`.loader`:** This class centers the spinner elements using flexbox.
* **`.loader div`:** This styles each individual circular element.  `border-radius: 50%` creates the circle.
* **`:nth-child`:** This selector is used to apply different animation delays to each circle, creating the staggered rotation effect.
* **`@keyframes rotate`:** This defines the animation, smoothly rotating the elements 360 degrees.
* **`animation-delay`:** This property offsets the start time of the animation for each circle.


**Links to Resources to Learn More:**

* **CSS Animations:** [MDN Web Docs - CSS Animations](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations)
* **CSS Transforms:** [MDN Web Docs - CSS Transforms](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)
* **Flexbox:** [CSS-Tricks - A Complete Guide to Flexbox](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)


Copyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.

