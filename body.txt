
This document details how to create a circular progress bar using only CSS.  This avoids the need for JavaScript, making it lightweight and efficient.  The technique relies on cleverly using the `clip-path` property and an `::before` pseudo-element.


## Description of the Styling

This styling creates a circular progress bar that fills dynamically based on a percentage value.  The progress bar itself is a simple circle, with a portion of it "clipped" away to reveal a background color, creating the effect of a progress indicator.  The percentage is controlled by a custom property (`--progress`) which can be easily adjusted.

## Full Code

```html
<!DOCTYPE html>
<html>
<head>
<title>CSS Circular Progress Bar</title>
<style>
.progress-ring {
  --progress: 75; /* Adjust this value to change the progress */
  width: 150px;
  height: 150px;
  border-radius: 50%;
  background-color: #eee;
  position: relative;
}

.progress-ring::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background-color: #4CAF50; /* Progress bar color */
  clip-path: circle(50% at 50% 50%);
  transform: rotate(calc(var(--progress) * 3.6deg)); /* 360deg / 100 */
  transform-origin: 50% 50%;
}
</style>
</head>
<body>

<h1>CSS Circular Progress Bar</h1>
<div class="progress-ring"></div>

</body>
</html>
```

## Explanation

* **`--progress` Custom Property:** This variable controls the percentage of the circle that is filled.  It's set to 75% in this example.  Change this value to adjust the progress.

* **`clip-path: circle(50% at 50% 50%);`:** This creates a circular clipping path, effectively masking the background color of the `::before` pseudo-element.  The `50% at 50% 50%` part centers the circle.

* **`transform: rotate(calc(var(--progress) * 3.6deg));`:** This is the key to the animation.  It rotates the filled portion of the circle.  `3.6deg` is calculated as `360deg / 100` (percentage steps).  This rotates the circle proportionally to the `--progress` value.

* **`transform-origin: 50% 50%;`:** This sets the rotation origin to the center of the circle, ensuring smooth rotation.


## External References

While this example is self-contained, understanding `clip-path` and `transform` properties might be helpful.  Here's a link to the MDN documentation:

* [MDN Web Docs - clip-path](https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path)
* [MDN Web Docs - transform](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)


Copyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.

