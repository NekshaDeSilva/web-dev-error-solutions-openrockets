[{"body":"\nThis document details the creation of a circular progress bar using only CSS.  No JavaScript is required! This leverages CSS's `clip-path` property for a clean and efficient solution.\n\n**Description of the Styling:**\n\nThis progress bar uses a combination of techniques to achieve its circular shape and progress animation. A base circle is created using a `border-radius` of 50%. A pseudo-element (`::before`) is then layered on top. This pseudo-element is rotated using `transform: rotate()` to create the progress effect.  The `clip-path` property is used to mask the circular progress, revealing only the portion representing the progress percentage.\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>CSS Circular Progress Bar</title>\n<style>\n.circular-progress {\n  width: 150px;\n  height: 150px;\n  border-radius: 50%;\n  background-color: #f0f0f0; /* Light gray background */\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.circular-progress::before {\n  content: \"\";\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background-color: #4CAF50; /* Green progress color */\n  clip-path: polygon(50% 50%, 50% 0%, 100% 0%, 100% 50%); /* Initial clip path */\n  transform: rotate(225deg); /* Example: 225deg represents 62.5% progress (225/360 * 100) */\n  transition: transform 0.5s ease; /* Smooth transition */\n  z-index: 1; /* Ensure it's above the background */\n}\n\n/* Example class to change the progress dynamically */\n.progress-75::before {\n    transform: rotate(270deg); /* 75% progress */\n}\n.progress-50::before {\n    transform: rotate(180deg); /* 50% progress */\n}\n.progress-25::before {\n    transform: rotate(90deg); /* 25% progress */\n}\n\n</style>\n</head>\n<body>\n\n<h1>CSS Circular Progress Bar</h1>\n\n<div class=\"circular-progress progress-75\"></div> <br>\n<div class=\"circular-progress progress-50\"></div><br>\n<div class=\"circular-progress progress-25\"></div><br>\n<div class=\"circular-progress\"></div>\n\n</body>\n</html>\n```\n\n**Explanation:**\n\n* **Base Circle:** The `.circular-progress` class creates the base circle using `width`, `height`, and `border-radius`.\n* **Pseudo-element:** The `::before` pseudo-element creates the progress indicator.\n* **`clip-path`:**  The `polygon()` function in `clip-path` defines the visible area of the pseudo-element.  The initial state shows a semicircle.\n* **`transform: rotate()`:** This rotates the pseudo-element, effectively creating the progress animation.  The degree of rotation is directly proportional to the percentage of progress (360 degrees representing 100%).\n* **`transition`:** This property ensures a smooth animation when the `transform` property changes.\n* **Classes for Dynamic Progress:** The `progress-75`, `progress-50`, and `progress-25` classes demonstrate how you would dynamically change the progress using different rotation angles.\n\n\n**Links to Resources to Learn More:**\n\n* **MDN Web Docs - `clip-path`:** [https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path](https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path)\n* **MDN Web Docs - `transform`:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transform](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n* **CSS Tricks - Introduction to clip-path:** [https://css-tricks.com/clipping-masking-css/](https://css-tricks.com/clipping-masking-css/) (search for clip-path examples)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":888,"title":"Creating a CSS-Only Circular Progress Bar"}]
