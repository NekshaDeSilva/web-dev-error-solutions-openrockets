[{"body":"\nThis document details how to create a circular progress bar using only CSS.  No JavaScript is required! This utilizes CSS3 properties for advanced styling and animation.\n\n## Description of the Styling\n\nThis technique leverages the `clip-path` property to create a circular mask that reveals a portion of a full circle.  By animating the `clip-path` property, we simulate the progress bar filling up. We use a background color for the track and a different color for the progress fill.  The percentage of progress is controlled by a custom property (`--progress`).\n\n## Full Code\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>CSS Circular Progress Bar</title>\n<style>\n.circular-progress {\n  width: 150px;\n  height: 150px;\n  border-radius: 50%;\n  background-color: #f0f0f0; /* Track color */\n  position: relative;\n}\n\n.circular-progress::before {\n  content: \"\";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  height: 100%;\n  background-color: #4CAF50; /* Progress color */\n  border-radius: 50%;\n  clip-path: circle(50% at 50% 50%); /* Initial clip path */\n  animation: progress 2s linear forwards; /* Animation */\n  --progress: 75; /* Adjust this value (0-100) to change progress */\n}\n\n@keyframes progress {\n  to {\n    clip-path: circle(50% at 50% calc(90deg + (var(--progress) * 3.6deg)));\n  }\n}\n</style>\n</head>\n<body>\n\n<h1>CSS Circular Progress Bar</h1>\n\n<div class=\"circular-progress\"></div>\n\n</body>\n</html>\n```\n\n## Explanation\n\n* **`.circular-progress`**: This class sets up the base circle with a background color (the track).\n* **`.circular-progress::before`**: This pseudo-element creates the progress fill.  `translate(-50%, -50%)` centers it within the parent.\n* **`clip-path: circle(50% at 50% 50%);`**: This initially creates a full circle.  The animation changes the `50%` part.\n* **`animation: progress 2s linear forwards;`**: This applies the `progress` animation, which takes 2 seconds, is linear, and runs forwards (doesn't reverse).\n* **`@keyframes progress`**:  This defines the animation. The `clip-path` is dynamically calculated based on `var(--progress)`.  The formula `calc(90deg + (var(--progress) * 3.6deg))` ensures the progress starts from the top and moves clockwise.  3.6deg is used because 360deg / 100 = 3.6deg (for 0-100% progress).  Adding 90deg offsets the starting point to the top.\n* **`--progress`**: This custom property controls the percentage of progress.  Change its value to adjust the progress.\n\n## Resources to Learn More\n\n* **MDN Web Docs on `clip-path`:** [https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path](https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path)\n* **MDN Web Docs on `@keyframes`:** [https://developer.mozilla.org/en-US/docs/Web/CSS/@keyframes](https://developer.mozilla.org/en-US/docs/Web/CSS/@keyframes)\n* **CSS Tricks (search for \"clip-path\"):** [https://css-tricks.com/](https://css-tricks.com/) (Search for relevant articles on clip-path and animations)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":703,"title":"Creating a CSS-Only Circular Progress Bar"}]
