[{"body":"\nThis document details how to create a circular progress bar using only CSS. No JavaScript or image assets are required.  This utilizes the `clip-path` property for a clean and efficient solution.\n\n**Description:**\n\nThis styling creates a visually appealing circular progress bar that can be easily customized by changing the percentage value and colors. The progress bar is a single element styled entirely with CSS, making it lightweight and performant.  It works by using a circle as a base and then using the `clip-path` property to \"clip\" the circle, creating the progress effect.\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Circular Progress Bar</title>\n<style>\n.progress-ring {\n  width: 150px;\n  height: 150px;\n  border-radius: 50%;\n  background-color: #f0f0f0; /* Light gray background */\n  position: relative;\n}\n\n.progress-ring::before {\n  content: \"\";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background-color: #4CAF50; /* Green progress color */\n  clip-path: circle(50% at 50% 50%); /* Initial clip path */\n  animation: progress-animation 2s linear forwards; /* Animation */\n}\n\n@keyframes progress-animation {\n  to {\n    clip-path: circle(75% at 50% 50%); /* Final clip path (75% complete) */\n  }\n}\n</style>\n</head>\n<body>\n\n<h1>Circular Progress Bar</h1>\n<div class=\"progress-ring\"></div>\n\n\n</body>\n</html>\n```\n\nTo change the percentage completion, modify the `circle()` value in the `@keyframes` section and adjust the animation duration as needed. For example, to show 30% completion, change `circle(75% at 50% 50%)` to `circle(30% at 50% 50%)`.  You can also customize the colors by changing the `background-color` properties.\n\n\n**Explanation:**\n\n1. **Base Circle:** The `.progress-ring` div creates the base circle with a light gray background.\n2. **Pseudo-element:** The `::before` pseudo-element creates the progress indicator on top of the base circle.\n3. **`clip-path`:**  The `clip-path: circle()` property is key. It creates a circular clipping region. The first `circle()` value defines the starting point, while the `@keyframes` animation modifies it to show the progress.\n4. **Animation:** The `progress-animation` keyframes smoothly change the `clip-path` radius, giving the progress effect.  `linear` ensures consistent speed, and `forwards` keeps the final state after animation.\n5. **Customization:**  The percentage completed, colors and animation duration can be easily adjusted in the CSS.\n\n\n**External References:**\n\n* [MDN Web Docs on `clip-path`](https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path)\n* [CSS-Tricks on Circular Progress Bars](https://css-tricks.com/creating-a-circular-progress-bar-with-only-css/) (This might offer alternative approaches)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":184,"title":"Creating a Pure CSS Circular Progress Bar"}]
