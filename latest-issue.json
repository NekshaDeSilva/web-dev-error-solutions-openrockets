[{"body":"\nThis document details how to create a circular progress bar using only CSS.  We'll leverage CSS's `clip-path` property and some clever calculations to achieve this effect without relying on JavaScript.\n\n\n**Description of the Styling:**\n\nThis technique uses a circle as a base, then uses the `clip-path` property to create a \"pie slice\" representing the progress.  We manipulate the `clip-path` value dynamically with a CSS variable to control the progress percentage.  The styling includes a background circle for the track and a foreground circle for the progress fill.  We use some subtle shadows to add depth and visual appeal.\n\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>CSS Circular Progress Bar</title>\n<style>\n.progress-ring {\n  width: 150px;\n  height: 150px;\n  position: relative;\n}\n\n.progress-ring .circle {\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  border: 10px solid #e0e0e0; /* Track color */\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\n.progress-ring .circle::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  clip-path: circle(50% at 50% 50%); /* Base circle */\n  background-color: #4CAF50; /* Progress color */\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2); /* Add shadow for depth */\n  transform: rotate(-90deg); /* Start at top */\n}\n\n.progress-ring[data-progress=\"75\"] .circle::before {\n  clip-path: polygon(50% 0%, 75% 50%, 50% 100%, 25% 50%); /* Example for 75% progress */\n}\n\n/* Dynamically change clip-path using CSS variable */\n:root {\n  --progress: 75; /* You can change this value */\n}\n\n.progress-ring .circle::before {\n  --progress: var(--progress);\n  --rotate: calc(var(--progress) * 3.6deg);\n  clip-path: polygon(50% 50%, calc(50% + 50% * cos(var(--rotate))) calc(50% - 50% * sin(var(--rotate))), 50% 50%, calc(50% + 50% * cos(var(--rotate))) calc(50% + 50% * sin(var(--rotate))));\n}\n\n\n</style>\n</head>\n<body>\n\n<div class=\"progress-ring\" data-progress=\"75\">\n  <div class=\"circle\"></div>\n</div>\n\n</body>\n</html>\n```\n\n**Explanation:**\n\n1. **Base Structure:**  We create a container (`progress-ring`) and an inner element (`circle`) for the track.\n2. **Pseudo-element:** The `::before` pseudo-element creates the progress fill.  It initially has a full circle `clip-path`.\n3. **Dynamic Clip-Path:** The `:root` element defines a CSS variable `--progress`  that determines the percentage. We use a calculation to convert the percentage to degrees for rotation (360 degrees / 100% = 3.6deg).  The `clip-path: polygon()` then dynamically creates the pie slice based on this calculated rotation.\n4. **Responsive Design:**  The size of the progress bar can be easily adjusted by changing the `width` and `height` of the `.progress-ring` class.\n\n**Resources to Learn More:**\n\n* **MDN Web Docs on `clip-path`:** [https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path](https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path)\n* **Understanding CSS Variables (Custom Properties):** [https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties](https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties)\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":935,"title":"Creating a CSS-Only Circular Progress Bar"}]
