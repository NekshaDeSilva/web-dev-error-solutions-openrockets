[{"body":"\nThis document details how to create a circular progress bar using only CSS.  No JavaScript is required! This technique leverages the `clip-path` property and some clever calculations to achieve a visually appealing and dynamic progress indicator.\n\n**Description of the Styling:**\n\nThis circular progress bar is built using a single SVG element.  The `clip-path` property is used to dynamically \"clip\" a circle, revealing only a portion representing the progress percentage.  We use CSS variables to easily adjust the size, colors, and progress value.\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>CSS Circular Progress Bar</title>\n<style>\n  .progress-ring {\n    width: 150px;\n    height: 150px;\n    border-radius: 50%;\n    background-color: #f0f0f0; /* Light grey background */\n    position: relative;\n  }\n\n  .progress-ring__circle {\n    width: 100%;\n    height: 100%;\n    clip-path: circle(50% at 50% 50%); /*Creates a circle*/\n    background-color: #4CAF50; /* Green progress color */\n    position: absolute;\n    transform: rotate(-90deg); /* Start at the top */\n    --progress: 75; /* Adjust this value for progress */\n    animation: progress 2s linear forwards; /* Animated progress */\n  }\n\n  .progress-ring__circle::before {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background: inherit;\n    clip-path: circle(50% at 50% 50%) rotate(calc(var(--progress) * 3.6deg)); /* dynamic progress rotation*/\n    /*animation: progress 2s linear forwards; uncomment for animated progress*/\n  }\n\n\n  @keyframes progress {\n    to {\n      clip-path: circle(50% at 50% 50%) rotate(calc(var(--progress) * 3.6deg));\n    }\n  }\n</style>\n</head>\n<body>\n\n<div class=\"progress-ring\">\n  <div class=\"progress-ring__circle\"></div>\n</div>\n\n</body>\n</html>\n```\n\n**Explanation:**\n\n* **`progress-ring`:** This div acts as a container, setting the size and basic shape of the progress bar.\n* **`progress-ring__circle`:** This div creates the circular background.  The `clip-path: circle(...)` creates the circular shape.  `transform: rotate(-90deg);` starts the progress at the top.  The `--progress` CSS variable controls the percentage complete. `animation` provides basic animation (uncomment it to enable.)\n* **`progress-ring__circle::before`:** This pseudo-element is crucial. It uses `clip-path` and `rotate` to create the dynamic progress arc.  The calculation `calc(var(--progress) * 3.6deg)` converts the percentage (0-100) into degrees (0-360).\n* **`@keyframes progress`:** This defines the animation that smoothly updates the progress bar.\n\n**Resources to Learn More:**\n\n* **MDN Web Docs on `clip-path`:** [https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path](https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path)\n* **CSS Tricks on Circular Progress Bars:** (Search for \"CSS circular progress bar\" on CSS Tricks for various approaches)\n\nBy adjusting the `--progress` variable in the CSS, you can easily change the progress level displayed. You can also customize the colors and sizes to match your design.\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":469,"title":"Creating a CSS-Only Circular Progress Bar"}]
