[{"body":"\nThis document details a CSS-only solution for creating an expanding card effect, a common user interface element.  The effect involves a card that expands vertically when hovered over, revealing additional content.  We'll achieve this using pure CSS, without relying on JavaScript.\n\n\n## Description of the Styling\n\nThe card is styled using a simple `div` element and several CSS properties.  Key techniques include:\n\n* **Transitions:**  Smooth transitions are applied to the `height` property to create the expansion animation.\n* **Overflow:** The `overflow: hidden;` property initially hides the extra content, revealing it only during expansion.\n* **Height:**  The initial height is set to a smaller value, then dynamically changed on hover.\n* **Pseudo-elements:** We use `::before` and `::after` pseudo-elements for stylistic touches (optional).\n\n## Full Code\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Expanding Card</title>\n<style>\n.card {\n  background-color: #f0f0f0;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  overflow: hidden; /* Hide content beyond initial height */\n  transition: height 0.3s ease-in-out; /* Smooth transition for height change */\n  width: 300px;\n  height: 100px; /* Initial height */\n  position: relative; /* Needed for absolute positioning of pseudo-elements */\n}\n\n.card:hover {\n  height: 250px; /* Expanded height on hover */\n}\n\n.card-content {\n  padding: 10px;\n}\n\n.card::before { /* Optional: Add a subtle shadow */\n  content: \"\";\n  position: absolute;\n  top: 0; left: 0; right: 0; bottom: 0;\n  background-color: rgba(0, 0, 0, 0.1);\n  z-index: -1;\n}\n\n</style>\n</head>\n<body>\n\n<div class=\"card\">\n  <div class=\"card-content\">\n    <h3>Card Title</h3>\n    <p>This is some initial text content of the card. </p>\n    <p>Additional content revealed on hover. </p>\n  </div>\n</div>\n\n</body>\n</html>\n```\n\n## Explanation\n\nThe core logic lies in the CSS rules for the `.card` class. The `transition` property makes the change in height smooth.  The `overflow: hidden;` ensures only the visible content is initially displayed. The `height` is set to a smaller value, and the `:hover` pseudo-class increases the height, revealing hidden content smoothly.  The optional pseudo-elements (`::before`) add a simple shadow effect.  This technique relies on the browser's ability to handle CSS transitions.\n\n\n## Resources to Learn More\n\n* **MDN Web Docs - CSS Transitions:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transition](https://developer.mozilla.org/en-US/docs/Web/CSS/transition)\n* **MDN Web Docs - CSS Pseudo-elements:** [https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements)\n* **CSS-Tricks - Transitions and Animations:** [https://css-tricks.com/almanac/properties/t/transition/](https://css-tricks.com/almanac/properties/t/transition/) (Look for examples related to height transitions)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":1141,"title":"Creating a CSS-Only Expanding Card"}]
