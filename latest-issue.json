[{"body":"\nThis document details the creation of an expanding card using only CSS.  The card expands smoothly on hover, revealing more content. This effect leverages CSS transitions and transforms for a polished, interactive experience. We'll be using plain CSS3; no frameworks like Tailwind are needed.\n\n\n**Description of the Styling:**\n\nThe card is designed with a simple structure: a container holding an image and some text.  On hover, the card increases in height, revealing the hidden text.  A subtle `box-shadow` adds depth, and the transition property ensures a smooth animation.  The  `transform: scale()`  is used for a slight zoom effect on hover, enhancing the expansion feeling.\n\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Expanding Card</title>\n<style>\n.card {\n  width: 200px;\n  height: 150px;\n  overflow: hidden;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease-in-out; /* Smooth transition */\n}\n\n.card:hover {\n  height: 300px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);\n  transform: scale(1.02); /* Subtle zoom effect */\n}\n\n.card img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.card-content {\n  padding: 10px;\n  background-color: white;\n  opacity:0; /* Initially hidden */\n  transform: translateY(20px); /* Initially shifted up */\n  transition: all 0.3s ease-in-out;\n}\n\n.card:hover .card-content {\n  opacity: 1;\n  transform: translateY(0);\n}\n</style>\n</head>\n<body>\n\n<div class=\"card\">\n  <img src=\"https://via.placeholder.com/200x150\" alt=\"Card Image\">\n  <div class=\"card-content\">\n    <h3>Card Title</h3>\n    <p>This is some extra content revealed on hover.</p>\n  </div>\n</div>\n\n</body>\n</html>\n```\n\n**Explanation:**\n\n* **`transition: all 0.3s ease-in-out;`**: This line applies a smooth transition to all properties that change over 0.3 seconds, using an ease-in-out timing function.  This is crucial for the animation effect.\n* **`overflow: hidden;`**: This prevents the content from overflowing the card before the expansion.\n* **`object-fit: cover;`**: This ensures the image covers the entire card area while maintaining its aspect ratio.\n* **`transform: translateY(20px);`**: Initially positions the content slightly above the visible area.  The hover state brings it down with a smooth transition.\n\n**Links to Resources to Learn More:**\n\n* **CSS Transitions:** [MDN Web Docs - CSS Transitions](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions)\n* **CSS Transforms:** [MDN Web Docs - CSS Transforms](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n* **CSS Box-shadow:** [MDN Web Docs - CSS box-shadow](https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":504,"title":"Creating a CSS-only Expanding Card with a subtle animation"}]
