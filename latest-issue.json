[{"body":"\nThis document details how to create an expanding card effect using only CSS.  No JavaScript is required! This effect involves a card that reveals additional content when clicked. We'll use CSS transitions and transforms to achieve a smooth and visually appealing animation.\n\n**Description of the Styling:**\n\nThe card is composed of two main elements: a front and a back.  The front displays a summary, and the back contains the expanded content.  Using CSS transitions, we smoothly animate the card's rotation on click to reveal the back.  The `transform-style: preserve-3d;` property is crucial for ensuring the 3D rotation works correctly.\n\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Expanding Card</title>\n<style>\n.card-container {\n  perspective: 1000px; /* Necessary for 3D transform effect */\n  width: 300px;\n  height: 200px;\n}\n\n.card {\n  width: 100%;\n  height: 100%;\n  transition: transform 0.8s;\n  transform-style: preserve-3d; /* Crucial for 3D effect */\n  cursor: pointer;\n}\n\n.card.is-flipped {\n  transform: rotateY(180deg);\n}\n\n.card-face {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden; /* Prevents front from being visible when flipped */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n}\n\n.card-front {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.card-back {\n  background-color: #f44336;\n  color: white;\n  transform: rotateY(180deg); /* Initially hidden on the back */\n}\n</style>\n</head>\n<body>\n\n<div class=\"card-container\">\n  <div class=\"card\" onclick=\"this.classList.toggle('is-flipped')\">\n    <div class=\"card-face card-front\">\n      <h2>Click Me!</h2>\n      <p>Front of Card</p>\n    </div>\n    <div class=\"card-face card-back\">\n      <h2>Expanded Content</h2>\n      <p>This is the back of the card, showing expanded content.</p>\n    </div>\n  </div>\n</div>\n\n</body>\n</html>\n```\n\n**Explanation:**\n\n* **`perspective`:** This property on the container creates the 3D space for the rotation.\n* **`transition`:**  This smoothly animates the `transform` property over 0.8 seconds.\n* **`transform-style: preserve-3d;`:** This is essential. It tells the browser to treat the children elements (`.card-face`) as 3D objects.\n* **`backface-visibility: hidden;`:** This hides the back face of the card when it's not flipped.\n* **`transform: rotateY(180deg);`:** This rotates the card around the Y-axis by 180 degrees to flip it.\n* **`onclick=\"this.classList.toggle('is-flipped')\"`:**  This simple JavaScript line toggles the `is-flipped` class, which applies the rotation.\n\n\n**Links to Resources to Learn More:**\n\n* **MDN Web Docs on CSS Transforms:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transform](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n* **MDN Web Docs on CSS Transitions:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transition](https://developer.mozilla.org/en-US/docs/Web/CSS/transition)\n* **CSS-Tricks (general CSS resources):** [https://css-tricks.com/](https://css-tricks.com/)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":678,"title":"Creating a CSS-Only Expanding Card"}]
