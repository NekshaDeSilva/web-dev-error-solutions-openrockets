[{"body":"\nThis document details how to create a circular progress bar using only CSS.  This technique avoids the need for JavaScript, keeping the code lightweight and improving performance. We'll leverage CSS's `clip-path` property and some clever calculations to achieve the desired effect.\n\n**Description of the Styling:**\n\nThis method uses a circle as the base, then applies a `clip-path` to reveal only a portion of the circle, simulating progress.  The size of the revealed portion is controlled by a single CSS variable, allowing for easy modification of the progress percentage.  We utilize rotations and transforms to create the visual effect of a filling circle.\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>CSS Circular Progress Bar</title>\n<style>\n.circular-progress {\n  width: 150px;\n  height: 150px;\n  border-radius: 50%;\n  background-color: #f0f0f0; /* Light gray background */\n  position: relative;\n}\n\n.circular-progress::before {\n  content: \"\";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background-color: #4CAF50; /* Green progress color */\n  clip-path: circle(50% at 50% 50%); /*Initial clip path*/\n  /*This is the key part*/\n  --progress: 75; /*Set the percentage of progress*/\n  transform: rotate(calc(var(--progress) * 3.6deg));  /* 360deg / 100% = 3.6deg per 1% */\n}\n</style>\n</head>\n<body>\n\n<div class=\"circular-progress\"></div>\n\n</body>\n</html>\n```\n\n**Explanation:**\n\n* **`.circular-progress`:** This class styles the main container, setting its dimensions, border-radius for the circle shape, and background color.  `position: relative` is crucial for absolute positioning of the pseudo-element.\n\n* **`.circular-progress::before`:** This pseudo-element creates the progress bar itself.  `translate(-50%, -50%)` centers it within the container.  The `clip-path: circle(50% at 50% 50%)` initially creates a full circle.  The magic happens with `--progress` and the `transform: rotate()` calculation.\n\n* **`--progress`:** This CSS variable sets the progress percentage (0-100).  Change this value to adjust the progress visually.\n\n* **`transform: rotate(calc(var(--progress) * 3.6deg))`:** This line is the core of the animation. It rotates the progress bar based on the `--progress` variable.  Since a full circle is 360 degrees, we divide 360 by 100 to get 3.6 degrees per percentage point.\n\n**External References:**\n\n* [MDN Web Docs on `clip-path`](https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path)\n* [CSS Tricks on Circular Progress Bars](https://css-tricks.com/creating-a-circular-progress-bar-with-just-css/) (While this might offer different techniques, it's a good resource for learning more about circular progress bars in general)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":159,"title":"Creating a CSS-only Circular Progress Bar"}]
