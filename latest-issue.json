[{"body":"\nThis document details a CSS-only solution for creating an expanding card effect.  No JavaScript is required.  The effect involves a card that expands to reveal more content when clicked.  We'll use plain CSS (no frameworks like Tailwind).\n\n**Description of the Styling:**\n\nThe styling relies on transitions, transforms, and the `:target` pseudo-class. The card is initially collapsed. Upon clicking, a hidden anchor link within the card is targeted, triggering a CSS transition that expands the card.  The expansion is achieved by scaling the card content and smoothly changing its height.  The styling uses clean, semantic CSS for better maintainability.\n\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Expanding Card</title>\n<style>\n.card {\n  width: 300px;\n  border: 1px solid #ccc;\n  overflow: hidden;\n  transition: height 0.5s ease-in-out; /* Smooth transition for height changes */\n}\n\n.card-content {\n  padding: 20px;\n  transition: transform 0.5s ease-in-out; /* Smooth transition for transform */\n  transform-origin: top; /* Ensures scaling happens from the top */\n  height: 100px; /* Initial height of the collapsed card */\n  overflow: hidden;\n}\n\n\n.card a {\n  display: block;\n  width: 100%;\n  height: 100%;\n  text-decoration: none;\n  color:inherit;\n}\n\n.card-content.expanded {\n  height: auto; /* Expands the height to accommodate the content */\n  transform: scaleY(1); /* Scales the content up to fill the expanded height */\n}\n\n\n.card:target .card-content {\n  height: auto;\n  transform: scaleY(1);\n  transition: transform 0.5s ease-in-out;\n  overflow: visible; /* Ensures content is fully visible when expanded */\n}\n\n.card:target .expand-button {\n    display:none;\n}\n\n.card:target {\n    box-shadow: 0px 0px 15px rgba(0,0,0,0.5);\n}\n</style>\n</head>\n<body>\n\n<div class=\"card\">\n  <a href=\"#card-content\">\n  <div class=\"card-content\">\n    <h2>Card Title</h2>\n    <p>This is some sample text for the card.  This text will be hidden until the card is expanded.</p>\n    <p>More sample text...</p>\n  </div>\n  </a>\n</div>\n\n</body>\n</html>\n```\n\n**Explanation:**\n\n*   **`.card`**:  This class styles the overall card container, setting its width, border, and applying a transition for smooth height changes.  `overflow: hidden` initially hides content exceeding the initial height.\n*   **`.card-content`**: This class styles the content within the card.  Transitions are added for smooth transform changes. `transform-origin: top;` ensures scaling happens from the top, creating a cleaner expansion effect.  `height: 100px;` sets the initial height.\n*   **`.card-content.expanded`**: This class will be applied when the card is expanded.  It sets the `height: auto;` and the transform for the expand effect.\n*   **:target**: This pseudo-class targets the element with the ID specified in the `href` attribute of the anchor. When the link is clicked, the `.card-content` will have the `height` and `transform` property changed.\n* **`.card:target .card-content`**: Adding this specific selector ensures that only when card is targetted we get the full expand effect and transitions.\n\n\n**Links to Resources to Learn More:**\n\n*   [MDN Web Docs on CSS Transitions](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions)\n*   [MDN Web Docs on the `:target` pseudo-class](https://developer.mozilla.org/en-US/docs/Web/CSS/:target)\n*   [Understanding CSS Transforms](https://css-tricks.com/almanac/properties/t/transform/)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":842,"title":"Creating a CSS-Only Expanding Card"}]
