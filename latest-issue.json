[{"body":"\nThis document details a CSS-only solution to create an expanding card effect.  The card expands to reveal more content when hovered over, providing a clean and engaging user experience without relying on JavaScript.  This example utilizes pure CSS3.\n\n**Description of the Styling:**\n\nThe card utilizes a combination of transitions, pseudo-elements (`::before` and `::after`), and absolute positioning to achieve the expanding effect. The `::before` pseudo-element is used to create the expanding background overlay, while the main content remains static.  The transition property smoothly animates the changes in height and opacity.\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Expanding Card</title>\n<style>\n.card {\n  width: 200px;\n  height: 150px;\n  background-color: #f0f0f0;\n  border-radius: 5px;\n  overflow: hidden; /* Prevents content from overflowing */\n  position: relative; /* Necessary for absolute positioning of pseudo-element */\n  transition: all 0.3s ease; /* Smooth transition for all properties */\n}\n\n.card:hover {\n  height: 300px; /* Expands on hover */\n}\n\n.card::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */\n  opacity: 0;\n  transition: opacity 0.3s ease; /* Smooth transition for opacity */\n}\n\n.card:hover::before {\n  opacity: 1; /* Overlay becomes visible on hover */\n}\n\n.card-content {\n  position: relative; /* Keep content within the card */\n  z-index: 1; /* Ensure content is above the overlay */\n  padding: 10px;\n  color: white;\n}\n</style>\n</head>\n<body>\n\n<div class=\"card\">\n  <div class=\"card-content\">\n    <h3>Expanding Card</h3>\n    <p>This is some sample text that will be revealed when you hover over the card.</p>\n  </div>\n</div>\n\n</body>\n</html>\n```\n\n**Explanation:**\n\n1. **`card` class:** Sets basic card styling (width, height, background, border-radius). `position: relative` is crucial for the absolute positioning of the pseudo-element.  `overflow: hidden` prevents content from peeking outside the card bounds before expansion.\n2. **`card:hover`:**  On hover, the card's height doubles, triggering the expansion.\n3. **`card::before`:** Creates a semi-transparent overlay using a pseudo-element.  `opacity: 0` initially hides it.\n4. **`card:hover::before`:** On hover, the overlay's opacity changes to 1, making it visible.\n5. **`card-content` class:** Contains the text content of the card, and `z-index: 1` ensures it stays on top of the overlay.\n6. **`transition` property:**  Smoothly animates the height and opacity changes.\n\n\n**Links to Resources to Learn More:**\n\n* **MDN Web Docs on CSS Transitions:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transition](https://developer.mozilla.org/en-US/docs/Web/CSS/transition)\n* **MDN Web Docs on Pseudo-elements:** [https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements)\n* **CSS-Tricks (General CSS resources):** [https://css-tricks.com/](https://css-tricks.com/)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":860,"title":"Creating a CSS-Only Expanding Card"}]
