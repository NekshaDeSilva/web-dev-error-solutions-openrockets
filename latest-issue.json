[{"body":"\nThis document addresses a common error encountered when working with Next.js Middleware: `TypeError: Cannot read properties of undefined (reading 'pathname')`. This usually occurs when accessing the `req.nextUrl.pathname` property within middleware before it's properly defined.  This often happens when attempting to conditionally redirect or modify the request based on the URL path.\n\n\n## Description of the Error\n\nThe error `TypeError: Cannot read properties of undefined (reading 'pathname')` indicates that the `req.nextUrl` object, specifically its `pathname` property, is undefined when your middleware tries to access it.  This means the Next.js request object hasn't been fully populated with URL information at the point your code attempts to read it.\n\n\n## Step-by-Step Code Fix\n\nLet's assume you're trying to redirect users from `/old-page` to `/new-page` using middleware.  This is a common scenario where the error might occur.\n\n\n**Incorrect Code (Will throw the error):**\n\n```javascript\n// pages/api/middleware.js\nexport function middleware(req) {\n  if (req.nextUrl.pathname === '/old-page') {\n    return NextResponse.redirect(new URL('/new-page', req.url))\n  }\n}\n\nexport const config = {\n  matcher: '/old-page'\n}\n```\n\n**Correct Code:**\n\n```javascript\n// pages/api/middleware.js\nimport { NextResponse } from 'next/server'\n\nexport function middleware(req) {\n  const url = req.nextUrl.clone(); // clone the URL object\n  if (url.pathname === '/old-page') {\n    url.pathname = '/new-page';\n    return NextResponse.rewrite(url); // Use rewrite instead of redirect for better performance\n  }\n}\n\nexport const config = {\n  matcher: '/old-page'\n}\n```\n\n**Explanation of Changes:**\n\n1. **Import `NextResponse`:** We explicitly import `NextResponse` to ensure correct usage.\n\n2. **Cloning the URL:** The crucial fix is `const url = req.nextUrl.clone();`.  This creates a copy of the `req.nextUrl` object.  This is important because directly manipulating `req.nextUrl` can cause unexpected behavior.  By working with a clone, we avoid potential race conditions or unintended side effects.\n\n\n3. **`NextResponse.rewrite()`:**  Instead of redirecting, we're now using `NextResponse.rewrite()`.  While `redirect` works, `rewrite` is generally preferred for middleware as it avoids a separate HTTP request, leading to better performance.\n\n\n## Explanation\n\nThe `req.nextUrl` object is populated asynchronously by Next.js. If your middleware attempts to access `req.nextUrl.pathname` before it's ready, the `pathname` property will be undefined, resulting in the error. Cloning `req.nextUrl` provides a safe copy to manipulate without interfering with the original object's asynchronous population.  Using `rewrite` also ensures efficient handling of the redirection within the middleware context.\n\n\n## External References\n\n* [Next.js Middleware Documentation](https://nextjs.org/docs/app/building-your-application/routing/middleware)\n* [NextResponse API Reference](https://nextjs.org/docs/api-reference/next/server/next-response)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":1091,"title":"Next.js Middleware: Handling the \"TypeError: Cannot read properties of undefined (reading 'pathname')\" Error"}]
