[{"body":"\nThis document details the creation of an expanding card using only CSS.  This effect is achieved through clever use of transitions and pseudo-elements, avoiding the need for JavaScript.  The design is simple and adaptable, making it a great example of clean and efficient CSS.  We'll use standard CSS3, no frameworks like Tailwind are needed.\n\n\n**Description of the Styling:**\n\nThe card starts in a compact state. On hover, a pseudo-element (`::before`) expands outwards, creating the animation of expansion.  The main card content remains stationary, while the background color change is also controlled by the hover state. We'll use transitions for a smooth animation.  Opacity is also used to help with the visual effect of expansion.\n\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Expanding Card</title>\n<style>\n.card {\n  width: 200px;\n  height: 150px;\n  background-color: #f0f0f0;\n  border-radius: 5px;\n  overflow: hidden; /* Hide the expanding pseudo-element initially */\n  position: relative; /* Needed for absolute positioning of pseudo-element */\n  transition: background-color 0.3s ease; /* Smooth background transition */\n}\n\n.card::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 255, 0.3); /* Expanding element color */\n  opacity: 0;\n  transform: scale(0);\n  transition: opacity 0.3s ease, transform 0.3s ease; /* Smooth expansion transition */\n}\n\n.card:hover {\n  background-color: #ddd; /* Background color change on hover */\n}\n\n.card:hover::before {\n  opacity: 1;\n  transform: scale(1.2); /* Expand the pseudo-element */\n}\n\n.card-content {\n  position: relative; /* Keep content on top */\n  z-index: 1; /* Ensure content is above the expanding element */\n  padding: 10px;\n  text-align: center;\n}\n</style>\n</head>\n<body>\n\n<div class=\"card\">\n  <div class=\"card-content\">\n    <h3>Expanding Card</h3>\n    <p>Hover over me!</p>\n  </div>\n</div>\n\n</body>\n</html>\n```\n\n\n**Explanation:**\n\n* **`.card`:**  Sets up the basic card styling, including dimensions, background, and rounded corners.  `overflow: hidden;` is crucial for initially hiding the expanding pseudo-element. `position: relative;` allows us to position the pseudo-element absolutely within the card.\n\n* **`.card::before`:** This pseudo-element creates the expanding effect.  It's positioned absolutely, covering the entire card.  Initially, it's transparent (`opacity: 0`) and scaled down (`transform: scale(0)`). On hover, its opacity changes to 1 and it scales up (`transform: scale(1.2)`), creating the expansion.\n\n* **`.card:hover` and `.card:hover::before`:**  These selectors control the styling changes on hover.  The background color of the card changes, and the pseudo-element's opacity and transform are adjusted.\n\n* **`.card-content`:** This class is used to style the content inside the card, ensuring it remains visible above the expanding background.  `position: relative` and `z-index:1` are important here to keep the content on top of the pseudo-element.\n\n\n\n**Links to Resources to Learn More:**\n\n* **MDN Web Docs - CSS Transitions:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transition](https://developer.mozilla.org/en-US/docs/Web/CSS/transition)\n* **MDN Web Docs - CSS Pseudo-elements:** [https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements)\n* **CSS-Tricks (Various articles on CSS animations and effects):** [https://css-tricks.com/](https://css-tricks.com/)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":900,"title":"Creating a CSS-only Expanding Card"}]
