[{"body":"\nThis document details a CSS-only solution to create an expanding card effect.  No JavaScript is required. This uses pure CSS3 techniques.\n\n\n## Description of the Styling\n\nThe effect creates a simple card that, on hover, expands to reveal more content. This is achieved using transitions, pseudo-elements, and clever manipulation of the card's dimensions and content visibility.  The expansion is smooth and visually appealing.\n\n\n## Full Code\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Expanding Card</title>\n<style>\n.card {\n  width: 200px;\n  height: 150px;\n  background-color: #f0f0f0;\n  border-radius: 5px;\n  overflow: hidden; /* Hide the expanding content initially */\n  transition: height 0.3s ease-in-out; /* Smooth transition for height change */\n  position: relative; /* Needed for absolute positioning of the pseudo-element */\n}\n\n.card:hover {\n  height: 300px; /* Expanded height on hover */\n}\n\n.card-content {\n  padding: 10px;\n}\n\n.card::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */\n  opacity: 0; /* Initially hidden */\n  transition: opacity 0.3s ease-in-out; /* Smooth transition for opacity */\n}\n\n.card:hover::before {\n  opacity: 1; /* Show overlay on hover */\n}\n\n.card-title {\n  font-weight: bold;\n}\n\n.card-expanded-content {\n  display: none; /* Initially hidden */\n  padding: 10px;\n}\n\n.card:hover .card-expanded-content {\n  display: block; /* Show on hover */\n}\n</style>\n</head>\n<body>\n\n<div class=\"card\">\n  <div class=\"card-content\">\n    <h3 class=\"card-title\">Card Title</h3>\n    <p>Some initial content.</p>\n  </div>\n  <div class=\"card-expanded-content\">\n    <p>This is the expanded content that appears on hover.</p>\n  </div>\n</div>\n\n</body>\n</html>\n```\n\n\n## Explanation\n\n* **`card` class:**  Sets basic dimensions, background, border radius, and importantly, `overflow: hidden` to initially clip any content beyond the card's boundaries. The `transition` property ensures smooth animations.  `position: relative` is crucial for positioning the pseudo-element.\n\n* **`card:hover`:**  Increases the height of the card on hover, triggering the transition.\n\n* **`card::before`:**  This pseudo-element creates a semi-transparent overlay that appears on hover.  Its opacity transition provides a smooth fade-in effect.\n\n* **`.card-expanded-content`:** This div holds the content that expands.  `display: none` initially hides it, while `display: block` on hover makes it visible.\n\nThis combination of CSS techniques creates an elegant expanding card effect without the need for JavaScript.\n\n\n## Links to Resources to Learn More\n\n* **CSS Transitions:**  [MDN Web Docs - CSS Transitions](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions)\n* **CSS Pseudo-elements:** [MDN Web Docs - CSS Pseudo-elements](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements)\n* **CSS `overflow` property:** [MDN Web Docs - CSS overflow](https://developer.mozilla.org/en-US/docs/Web/CSS/overflow)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":1295,"title":"Creating a CSS-only Expanding Card"}]
