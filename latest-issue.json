[{"body":"\nThis document details the creation of a visually appealing loading spinner using only CSS.  No JavaScript is required! This utilizes CSS animations and transforms to achieve the effect.\n\n\n## Description of the Styling\n\nThis spinner consists of five equally spaced circles arranged in a circular pattern.  These circles pulsate individually, creating a dynamic loading animation. The styling uses keyframes to define the animation and transforms to position the circles correctly.  We'll leverage CSS variables for easy customization of colors and sizes.\n\n\n## Full Code\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>CSS Loading Spinner</title>\n<style>\n:root {\n  --spinner-size: 80px;\n  --spinner-color: #007bff; /* Blue, easily customizable */\n}\n\n.spinner {\n  width: var(--spinner-size);\n  height: var(--spinner-size);\n  position: relative;\n  animation: rotate 2s linear infinite;\n}\n\n.spinner::before {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 10px;\n  height: 10px;\n  background-color: var(--spinner-color);\n  border-radius: 50%;\n  animation: bounce 1s ease-in-out infinite;\n}\n\n.spinner::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 10px;\n    height: 10px;\n    background-color: var(--spinner-color);\n    border-radius: 50%;\n    animation: bounce 1s ease-in-out infinite;\n}\n\n.spinner::before {\n  animation-delay: 0.2s;\n}\n\n.spinner::after {\n  animation-delay: 0.4s;\n}\n\n\n@keyframes rotate {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes bounce {\n  0%, 100% {\n    transform: scale(1);\n    opacity: 1;\n\n  }\n  50% {\n    transform: scale(1.2);\n    opacity: 0.5;\n  }\n}\n</style>\n</head>\n<body>\n\n<div class=\"spinner\"></div>\n\n</body>\n</html>\n```\n\n## Explanation\n\n* **`--spinner-size` and `--spinner-color`:** These CSS variables allow easy customization of the spinner's size and color.\n* **`.spinner`:** This class sets the dimensions and relative positioning for the spinner. The `rotate` animation spins the container.\n* **`.spinner::before` and `.spinner::after`:** These pseudo-elements create the individual circles.  `transform: translate(-50%, -50%);` centers them within the parent.  `border-radius: 50%;` makes them circular. The `bounce` animation creates the pulsating effect. Different animation delays stagger the pulses.\n* **`@keyframes rotate`:** This defines the rotation animation for the overall spinner.\n* **`@keyframes bounce`:**  This keyframes animation defines the scaling and opacity changes to give the bouncing/pulsating effect.\n\n\n## Resources to Learn More\n\n* **MDN Web Docs on CSS Animations:** [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations)\n* **MDN Web Docs on CSS Transforms:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transform](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n* **CSS-Tricks (various articles on animations and loaders):** [https://css-tricks.com/](https://css-tricks.com/)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":926,"title":"Creating a Pure CSS Loading Spinner"}]
