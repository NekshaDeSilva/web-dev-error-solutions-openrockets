[{"body":"\nThis document details the creation of a circular progress bar using only CSS.  No JavaScript is required!  This example utilizes CSS variables (custom properties) for easy customization.\n\n\n**Description of the Styling:**\n\nThe progress bar is created using a combination of a circle and a rotated arc. The circle acts as the base, while the arc represents the filled portion of the progress bar.  CSS variables control the size, color, and progress percentage, allowing for simple adjustments.  The key trick involves using `transform: rotate()` on a pseudo-element to create the arc.  The `stroke-dasharray` and `stroke-dashoffset` properties are used to control the length of the visible arc.\n\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>CSS Circular Progress Bar</title>\n<style>\n.progress-ring {\n  --size: 100px;\n  --stroke-width: 10px;\n  --progress: 75; /* Adjust this value to change the progress */\n  --color: #007bff;\n\n  width: var(--size);\n  height: var(--size);\n  position: relative;\n}\n\n.progress-ring svg {\n  transform: rotate(-90deg); /* Start the arc from the top */\n}\n\n.progress-ring circle {\n  stroke-width: var(--stroke-width);\n  stroke: #ccc; /* Unfilled circle color */\n  fill: transparent;\n  cx: 50%;\n  cy: 50%;\n  r: calc((var(--size) - var(--stroke-width)) / 2);\n}\n\n.progress-ring circle.progress {\n  stroke: var(--color);\n  stroke-dasharray: calc(2 * 3.14159 * ((var(--size) - var(--stroke-width)) / 2));\n  stroke-dashoffset: calc(2 * 3.14159 * ((var(--size) - var(--stroke-width)) / 2) * (1 - var(--progress) / 100));\n  transition: stroke-dashoffset 0.5s ease; /* Add a smooth transition */\n}\n</style>\n</head>\n<body>\n\n<div class=\"progress-ring\">\n  <svg width=\"100%\" height=\"100%\">\n    <circle class=\"progress\" cx=\"50%\" cy=\"50%\" r=\"45\" />\n    <circle cx=\"50%\" cy=\"50%\" r=\"45\" />\n  </svg>\n</div>\n\n</body>\n</html>\n```\n\n\n**Explanation:**\n\n* **CSS Variables:**  Using `--size`, `--stroke-width`, `--progress`, and `--color` makes customization incredibly easy.  Just change the variable values to alter the appearance.\n* **SVG Circle:** An SVG `<circle>` element is used to create the circular path. Two circles are used; one for the background and one for the progress.\n* **`stroke-dasharray`:** This property defines the total length of the dash (the circumference of the circle).\n* **`stroke-dashoffset`:** This property defines the offset of the dash, allowing us to control the visible portion of the arc.  The calculation ensures the correct offset based on the progress percentage.\n* **`transform: rotate(-90deg)`:** This rotates the SVG so the progress starts from the top, rather than the right.\n* **Transition:** The `transition` property creates a smooth animation when the progress value changes.\n\n\n**Links to Resources to Learn More:**\n\n* **MDN Web Docs - CSS Variables:** [https://developer.mozilla.org/en-US/docs/Web/CSS/--*](https://developer.mozilla.org/en-US/docs/Web/CSS/--*)\n* **MDN Web Docs - SVG `<circle>` element:** [https://developer.mozilla.org/en-US/docs/Web/SVG/Element/circle](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/circle)\n* **MDN Web Docs - `stroke-dasharray` and `stroke-dashoffset`:** [https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":1188,"title":"Creating a CSS-Only Circular Progress Bar"}]
