[{"body":"\nThis document details a CSS-only solution to create an expanding card effect.  No JavaScript is required.  The effect uses CSS transitions and transforms to smoothly expand a card when hovered over, revealing hidden content.  This example uses plain CSS but could easily be adapted to use a CSS framework like Tailwind CSS.\n\n**Description of the Styling:**\n\nThe card utilizes a single `<div>` element with nested content. The primary styling focuses on the transition property, applying it to `transform` and `box-shadow`. The `:hover` pseudo-class triggers the expansion.  The `transform: scale()` function is used for the scaling effect, and `box-shadow` adds a subtle visual cue on hover.  Padding and margins are used for visual spacing and layout.\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Expanding Card</title>\n<style>\n.card {\n  background-color: #f0f0f0;\n  border-radius: 8px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  padding: 20px;\n  transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;\n  overflow: hidden; /* Hide content that extends beyond card on expansion */\n  width: 300px; /* Adjust as needed */\n}\n\n.card:hover {\n  transform: scale(1.05);\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\n  cursor: pointer; /* Indicate interactivity */\n}\n\n.card-content {\n  height: 100px; /* Initial height of the content */\n  overflow: hidden; /* Hide content that extends beyond initial height */\n  transition: max-height 0.3s ease-in-out; /* Animate max-height change */\n}\n\n.card:hover .card-content {\n  max-height: 300px; /* Maximum height of the content on hover */\n}\n\n.card h2 {\n    margin-top: 0;\n}\n\n</style>\n</head>\n<body>\n\n<div class=\"card\">\n  <h2>Card Title</h2>\n  <div class=\"card-content\">\n    <p>This is the content of the card.  This text will be hidden initially and revealed on hover.</p>\n    <p>More content here to demonstrate the expansion.</p>\n  </div>\n</div>\n\n</body>\n</html>\n```\n\n\n**Explanation:**\n\n* **`transition` Property:** This is crucial for the smooth animation. It specifies the properties (`transform` and `box-shadow`) that will animate, the duration (`0.3s`), and the easing function (`ease-in-out`).  Adding a transition to `max-height` on the `.card-content` allows the content area to smoothly expand.\n* **`:hover` Pseudo-class:** This targets the element when the mouse hovers over it.\n* **`transform: scale(1.05)`:**  This slightly increases the size of the card on hover.\n* **`box-shadow`:**  This adds a more pronounced shadow on hover to enhance the visual feedback.\n* **`max-height`:** This property controls the visible height of the content, allowing for the expansion. Initially set low to hide content, then increases on hover.\n* **`overflow: hidden`:** This prevents content from spilling outside the card's boundaries.\n\n\n**Links to Resources to Learn More:**\n\n* **CSS Transitions:** [MDN Web Docs - CSS Transitions](https://developer.mozilla.org/en-US/docs/Web/CSS/transition)\n* **CSS Transforms:** [MDN Web Docs - CSS Transforms](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n* **CSS Pseudo-classes:** [MDN Web Docs - CSS Pseudo-classes](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":868,"title":"Creating a CSS-Only Expanding Card"}]
