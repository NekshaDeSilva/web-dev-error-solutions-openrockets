[{"body":"\nThis challenge involves creating a pulsating heart shape using only CSS.  No JavaScript is required. We leverage CSS animations and gradients to achieve the effect.  This example uses plain CSS; adapting it to Tailwind would simply involve replacing the raw CSS values with their Tailwind equivalents.\n\n\n## Description of the Styling\n\nThe heart is created using a pseudo-element (`::before` and `::after`) positioned absolutely within a parent container.  These pseudo-elements are shaped using a combination of border-radius and transforms. The pulsating effect is achieved using a CSS animation that smoothly changes the transform scale property, giving the illusion of a beating heart. A linear gradient adds a subtle shading effect for improved visual appeal.\n\n\n## Full Code\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>CSS Pulsating Heart</title>\n<style>\n.heart {\n  width: 100px;\n  height: 100px;\n  position: relative;\n  display: inline-block;\n}\n\n.heart::before,\n.heart::after {\n  content: \"\";\n  position: absolute;\n  background-color: #e74c3c; /* Red Heart */\n  background-image: linear-gradient(to bottom right, #e74c3c, #c0392b); /* Gradient for depth */\n  border-radius: 50%;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.heart::before {\n  width: 50px;\n  height: 50px;\n  transform: rotate(-45deg);\n}\n\n.heart::after {\n  width: 50px;\n  height: 50px;\n  transform: rotate(45deg);\n}\n\n.heart {\n  animation: pulse 1s infinite;\n}\n\n@keyframes pulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.1);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n</style>\n</head>\n<body>\n\n<div class=\"heart\"></div>\n\n</body>\n</html>\n```\n\n\n## Explanation\n\n* **`.heart`:** This class styles the main container. `position: relative` is crucial for absolute positioning of the pseudo-elements.\n* **`.heart::before`, `.heart::after`:** These pseudo-elements create the two halves of the heart.  The `transform: rotate()` gives them the heart shape.\n* **`background-image: linear-gradient(...)`:** This adds a subtle gradient to the heart for a more 3D effect.  Adjust colors as desired.\n* **`@keyframes pulse`:** This defines the animation.  The `transform: scale()` smoothly changes the size of the heart, creating the pulsating effect.  Adjust values for speed and intensity.\n\n\n## Resources to Learn More\n\n* **MDN Web Docs - CSS Animations:** [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations)\n* **MDN Web Docs - Pseudo-elements:** [https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements)\n* **CSS Tricks:** [https://css-tricks.com/](https://css-tricks.com/) (Search for \"animations\" or \"pseudo-elements\")\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":736,"title":"Creating a CSS-only Pulsating Heart"}]
