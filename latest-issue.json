[{"body":"\n## Description of the Error\n\nA common problem encountered when integrating CanvasJS charts into a responsive web application is the chart's failure to properly resize or render correctly when the browser window is resized or the viewport changes (e.g., on mobile devices). This often manifests as a chart that remains at its initial size, resulting in distortion, cropped elements, or parts of the chart being cut off.  The chart might render correctly initially, but fail to adapt to changes in the browser window size. This is particularly problematic in responsive designs where content reflows based on screen dimensions.\n\n## Code: Step-by-Step Fix\n\nThis example demonstrates how to ensure a CanvasJS chart resizes correctly within a responsive layout using JavaScript. We'll focus on using the `window.addEventListener` to detect resize events and trigger the chart's `render()` method.  Assume you have already included the CanvasJS library and have created your chart object (`chart`).\n\n**1.  Include CanvasJS:**\n\n```html\n<script src=\"https://cdn.canvasjs.com/1.0.0/canvasjs.min.js\"></script>\n```\n\n**2. Create the Chart (Example):**\n\n```javascript\nwindow.onload = function () {\n    var chart = new CanvasJS.Chart(\"chartContainer\", {\n        title: {\n            text: \"Responsive Chart\"\n        },\n        data: [{\n            type: \"column\",\n            dataPoints: [\n                { x: 10, y: 71 },\n                { x: 20, y: 55 },\n                { x: 30, y: 50 },\n                { x: 40, y: 65 },\n                { x: 50, y: 95 }\n            ]\n        }]\n    });\n    chart.render();\n}\n```\n\n**3. Add a Resize Listener and Rerender:**\n\n```javascript\nwindow.addEventListener('resize', function () {\n    chart.render(); // This line is crucial\n});\n```\n\n\n**4. Complete HTML Structure:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Responsive CanvasJS Chart</title>\n<script src=\"https://cdn.canvasjs.com/1.0.0/canvasjs.min.js\"></script>\n</head>\n<body>\n<div id=\"chartContainer\" style=\"height: 300px; width: 100%;\"></div>\n<script>\n// JavaScript from steps 2 and 3 goes here\n</script>\n</body>\n</html>\n```\n\n## Explanation\n\nThe core of the solution lies in the `window.addEventListener('resize', ...)` function. This adds an event listener that triggers a function whenever the browser window is resized.  Inside this function, `chart.render()` is called. This instructs CanvasJS to redraw the chart using the new dimensions of its container (`#chartContainer` in this case).  Crucially, the `#chartContainer` div should have its width set to `100%` to ensure it always occupies the full available width, allowing the chart to resize responsively.  Setting a fixed height might be necessary to prevent vertical collapse, but it could still adapt to different screen heights.\n\n## External References\n\n* **CanvasJS Documentation:** [https://canvasjs.com/](https://canvasjs.com/)  (Check their documentation for advanced features and further assistance)\n\n\n## Copyright (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":701,"title":"Resolving CanvasJS Chart Rendering Issues in a Responsive Layout"}]
