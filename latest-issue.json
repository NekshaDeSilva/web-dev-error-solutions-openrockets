[{"body":"\nThis document details how to create a visually appealing circular progress bar using only CSS.  No JavaScript is required! This technique leverages CSS gradients and transforms to achieve a smooth, animated effect.\n\n**Description of the Styling:**\n\nThis circular progress bar uses a combination of techniques to create the visual effect.  A `radial-gradient` creates the circular base, while a `linear-gradient` masked with a circle is used to represent the progress.  CSS animations smoothly transition the progress.  This method is efficient and avoids the performance overhead of JavaScript solutions.\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>CSS Circular Progress Bar</title>\n<style>\n.progress-ring {\n  width: 150px;\n  height: 150px;\n  border-radius: 50%;\n  background: radial-gradient(circle at center, #e5e5e5, #e5e5e5 90%, transparent 100%);\n  position: relative;\n}\n\n.progress-ring::before {\n  content: \"\";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background: linear-gradient(to right, #4CAF50, #4CAF50) no-repeat;\n  background-size: 100% 100%;\n  clip-path: circle(50% at center);\n  animation: progress 3s linear forwards;\n}\n\n@keyframes progress {\n  to {\n    transform: translate(-50%, -50%) rotate(360deg); /* Adjust 360deg for progress percentage */\n    background-size: calc(100% * var(--progress)) 100%; /* Adjust var(--progress) accordingly */\n  }\n}\n\n.container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n}\n\n/* Example usage with progress percentage (0-100%) */\n.container .progress-ring {\n  --progress: 0.75; /* 75% progress */\n}\n\n</style>\n</head>\n<body>\n<div class=\"container\">\n  <div class=\"progress-ring\"></div>\n</div>\n</body>\n</html>\n```\n\n**Explanation:**\n\n* **`progress-ring`:** This is the main container, setting the size and basic style of the circle.  The `radial-gradient` creates the grey background with a transparent outer ring to give a 3D effect.\n* **`progress-ring::before`:** This pseudo-element creates the progress bar itself.  The `linear-gradient` provides the color, `clip-path` makes it circular, and the `background-size` and animation control its length.\n* **`@keyframes progress`:** This defines the animation. The `transform: rotate()` rotates the `linear-gradient`, and the `background-size` dynamically changes the progress arc length based on the `--progress` custom property.\n* **Custom Property `--progress`:** This allows easy control of the progress percentage.  A value of `0` represents 0% progress, `1` represents 100%, and so on.\n\n\n**External References:**\n\n* [MDN Web Docs on `radial-gradient`](https://developer.mozilla.org/en-US/docs/Web/CSS/radial-gradient)\n* [MDN Web Docs on `linear-gradient`](https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient)\n* [MDN Web Docs on `clip-path`](https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path)\n* [MDN Web Docs on CSS Animations](https://developer.mozilla.org/en-US/docs/Web/CSS/animation)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":200,"title":"Creating a Pure CSS Circular Progress Bar"}]
