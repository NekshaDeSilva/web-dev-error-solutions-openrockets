[{"body":"\nThis document details how to create an expanding card effect using only CSS.  No JavaScript required! This effect uses CSS transitions and transforms to smoothly expand a card when it's hovered over.  We'll use standard CSS3 properties; no Tailwind CSS is needed for this particular example.\n\n\n## Description of the Styling\n\nThe card will have a basic design initially. On hover, the card will expand slightly, revealing more content and subtly changing its shadow.  The expansion will be a smooth transition, enhancing the user experience.\n\n\n## Full Code\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Expanding Card</title>\n<style>\n.card {\n  width: 200px;\n  height: 150px;\n  background-color: #f0f0f0;\n  border-radius: 5px;\n  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2);\n  transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;\n  overflow: hidden; /* Hide content that overflows on smaller cards */\n  position: relative; /* For absolute positioning of inner content*/\n}\n\n.card:hover {\n  transform: scale(1.1);\n  box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.3);\n  cursor: pointer;\n}\n\n.card-content {\n  padding: 15px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n\n.card h2 {\n  margin-top: 0;\n}\n\n.card p {\n  margin-bottom: 0;\n  font-size: 14px;\n}\n\n</style>\n</head>\n<body>\n\n<div class=\"card\">\n  <div class=\"card-content\">\n    <h2>Card Title</h2>\n    <p>Some card content goes here.  This is a longer paragraph to demonstrate expansion.</p>\n  </div>\n</div>\n\n</body>\n</html>\n```\n\n\n## Explanation\n\n* **`.card`:** This class styles the main card element. `width` and `height` define its dimensions. `border-radius` creates rounded corners. `box-shadow` adds a subtle shadow.  `transition` specifies the smooth animation for `transform` (scaling) and `box-shadow` properties. `overflow: hidden;` ensures content doesn't spill outside the card's bounds. `position: relative;` allows us to absolutely position the inner content.\n* **`.card:hover`:**  This styles the card when the mouse hovers over it. `transform: scale(1.1);` increases the card size by 10%. `box-shadow` is intensified. `cursor: pointer;` changes the cursor to a hand, indicating an interactive element.\n* **`.card-content`:** This class styles the content within the card. `padding` adds spacing, `position: absolute;` and the width and height properties make it fill the card completely. The flexbox properties (`display: flex`, etc.) centers the content.\n\n## Links to Resources to Learn More\n\n* **MDN Web Docs - CSS Transitions:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transition](https://developer.mozilla.org/en-US/docs/Web/CSS/transition)\n* **MDN Web Docs - CSS Transforms:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transform](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n* **CSS-Tricks:** [https://css-tricks.com/](https://css-tricks.com/) (Search for \"CSS transitions\" or \"CSS transforms\" for numerous tutorials)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":460,"title":"Creating a CSS-only Expanding Card"}]
