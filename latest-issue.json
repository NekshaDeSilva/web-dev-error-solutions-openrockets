[{"body":"\nThis document details the creation of an expanding card effect using only CSS.  No JavaScript is required.  This effect uses CSS transitions and transforms to achieve a smooth, visually appealing expansion when the card is hovered over.\n\n**Description of the Styling:**\n\nThe card is initially displayed in a compact state. On hover, the card expands horizontally, revealing more content.  This is achieved using CSS transitions on the `transform` property (for scaling) and `width` property (for horizontal expansion).  The transition provides a smooth animation effect.  We utilize pseudo-elements (`::before` and `::after`) for decorative purposes, such as a subtle background shadow.\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Expanding Card</title>\n<style>\n.card {\n  width: 200px;\n  height: 150px;\n  background-color: #f0f0f0;\n  border-radius: 5px;\n  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2);\n  overflow: hidden; /* Hide content that overflows */\n  transition: width 0.3s ease-in-out, transform 0.3s ease-in-out; /* Smooth transition */\n  position: relative; /* Needed for absolute positioning of pseudo-elements */\n}\n\n.card:hover {\n  width: 400px;\n  transform: scale(1.1); /* Subtle zoom effect */\n}\n\n.card::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0,0,0,0.1);\n  z-index: -1; /* Place behind the card */\n  border-radius: 5px;\n  transition: background-color 0.3s ease-in-out;\n}\n\n.card:hover::before {\n  background: rgba(0,0,0,0.2);\n}\n\n.card-content {\n  padding: 10px;\n  color: #333;\n}\n\n</style>\n</head>\n<body>\n\n<div class=\"card\">\n  <div class=\"card-content\">\n    <h3>Expanding Card</h3>\n    <p>This is some sample text within the card.</p>\n  </div>\n</div>\n\n</body>\n</html>\n```\n\n\n**Explanation:**\n\n* **`transition` property:** This property is crucial for the animation. It specifies which properties (`width`, `transform`) should transition smoothly, the duration (`0.3s`), and the easing function (`ease-in-out`).\n* **`transform: scale(1.1)`:** This slightly scales up the card on hover, adding a subtle zoom effect.\n* **`::before` pseudo-element:**  Creates a semi-transparent background layer behind the card, providing a shadow effect that also animates on hover.\n* **`overflow: hidden;`:** Prevents content within the card from spilling outside the card boundaries during the expansion.\n* **`position: relative;`:** Allows absolute positioning of pseudo-elements within the card.\n\n\n**Links to Resources to Learn More:**\n\n* **MDN Web Docs - CSS Transitions:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transition](https://developer.mozilla.org/en-US/docs/Web/CSS/transition)\n* **MDN Web Docs - CSS Transforms:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transform](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n* **CSS-Tricks:** Search for \"CSS transitions\" or \"CSS hover effects\" on [https://css-tricks.com/](https://css-tricks.com/)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":554,"title":"Creating a CSS-only Expanding Card"}]
