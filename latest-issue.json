[{"body":"\nThis challenge involves creating a responsive pricing table using CSS.  The goal is to design a clean, visually appealing table that adapts seamlessly to different screen sizes. We'll use a combination of CSS Grid and media queries for responsiveness.  This example will use standard CSS3, but the concepts could easily be adapted to Tailwind CSS.\n\n\n**Description of the Styling:**\n\nThe pricing table will have three columns representing different pricing plans (Basic, Premium, Elite). Each plan will have a title, a list of features, a price, and a call-to-action button. The design will utilize clean typography, subtle shadows, and a consistent color scheme to create a professional and user-friendly experience.  The table will be responsive, stacking vertically on smaller screens.\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Responsive Pricing Table</title>\n<style>\nbody {\n  font-family: sans-serif;\n}\n\n.pricing-table {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* Responsive columns */\n  grid-gap: 20px;\n  padding: 20px;\n}\n\n.plan {\n  border: 1px solid #ccc;\n  padding: 20px;\n  text-align: center;\n  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n.plan h2 {\n  margin-top: 0;\n}\n\n.plan ul {\n  list-style: none;\n  padding: 0;\n}\n\n.plan li {\n  margin-bottom: 10px;\n}\n\n.plan .price {\n  font-size: 1.5em;\n  font-weight: bold;\n  margin-bottom: 10px;\n}\n\n.plan button {\n  background-color: #4CAF50;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n/* Media query for smaller screens */\n@media (max-width: 768px) {\n  .pricing-table {\n    grid-template-columns: 1fr; /* Stack columns vertically */\n  }\n}\n</style>\n</head>\n<body>\n\n<div class=\"pricing-table\">\n  <div class=\"plan\">\n    <h2>Basic</h2>\n    <ul>\n      <li>Feature 1</li>\n      <li>Feature 2</li>\n      <li>Feature 3</li>\n    </ul>\n    <p class=\"price\">$9/month</p>\n    <button>Sign Up</button>\n  </div>\n  <div class=\"plan\">\n    <h2>Premium</h2>\n    <ul>\n      <li>Feature 1</li>\n      <li>Feature 2</li>\n      <li>Feature 3</li>\n      <li>Feature 4</li>\n      <li>Feature 5</li>\n    </ul>\n    <p class=\"price\">$19/month</p>\n    <button>Sign Up</button>\n  </div>\n  <div class=\"plan\">\n    <h2>Elite</h2>\n    <ul>\n      <li>Feature 1</li>\n      <li>Feature 2</li>\n      <li>Feature 3</li>\n      <li>Feature 4</li>\n      <li>Feature 5</li>\n      <li>Feature 6</li>\n    </ul>\n    <p class=\"price\">$29/month</p>\n    <button>Sign Up</button>\n  </div>\n</div>\n\n</body>\n</html>\n```\n\n**Explanation:**\n\n* **CSS Grid:**  The `grid-template-columns` property creates a responsive grid layout. `repeat(auto-fit, minmax(300px, 1fr))` ensures that columns adjust based on screen size, fitting as many as possible with a minimum width of 300px.\n* **Media Queries:** The `@media` query targets screens smaller than 768px, changing the grid to stack columns vertically for better mobile viewing.\n* **Styling:**  The CSS styles the table elements (headings, lists, buttons, etc.) for visual appeal and consistency.\n\n\n**Links to Resources to Learn More:**\n\n* **CSS Grid Layout:** [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout)\n* **CSS Media Queries:** [https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries](https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries)\n* **Learn CSS:** [https://www.freecodecamp.org/learn/responsive-web-design/](https://www.freecodecamp.org/learn/responsive-web-design/)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":1343,"title":"CSS Challenge:  Responsive Pricing Table"}]
