[{"body":"\n**Description of the Error:**\n\nThe error `ReferenceError: process is not defined` commonly occurs in Next.js applications when you try to use Node.js-specific modules or functionalities within a client-side (browser) JavaScript file.  The `process` global object is a Node.js built-in object, not available in the browser environment.  This error typically arises when you inadvertently import a module that relies on `process` or directly use `process` itself in your browser-side code.\n\n**Full Code of Fixing Step-by-Step:**\n\nLet's assume you have a file named `utils/auth.js` with the following faulty code:\n\n```javascript\n// utils/auth.js (Incorrect - uses process)\nimport jwt from 'jsonwebtoken';\n\nexport const verifyToken = (token) => {\n  try {\n    const decoded = jwt.verify(token, process.env.JWT_SECRET); // Error here!\n    return decoded;\n  } catch (error) {\n    return null;\n  }\n};\n```\n\nThis code attempts to use `process.env.JWT_SECRET`, which is only accessible on the server-side.  Trying to use this in a client-side component will throw the `ReferenceError`.\n\nHere's the corrected approach:\n\n\n**1. Separate Server-Side and Client-Side Logic:**\n\nInstead of attempting to perform JWT verification in the browser, move the authentication logic to your API routes (server-side).\n\n**2. Create an API Route:**\n\nCreate a file in your `pages/api` directory (e.g., `pages/api/verifyToken.js`):\n\n```javascript\n// pages/api/verifyToken.js\nimport jwt from 'jsonwebtoken';\n\nexport default function handler(req, res) {\n  const { token } = req.body;\n\n  try {\n    const decoded = jwt.verify(token, process.env.JWT_SECRET);\n    res.status(200).json({ user: decoded });\n  } catch (error) {\n    res.status(401).json({ error: 'Invalid token' });\n  }\n}\n```\n\nThis route uses `process.env.JWT_SECRET` correctly since it runs on the server.\n\n\n**3.  Client-Side Fetch:**\n\nNow, your client-side component can fetch the verification result from this API route:\n\n```javascript\n// components/ProtectedComponent.js\nimport { useState, useEffect } from 'react';\n\nconst ProtectedComponent = () => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const token = localStorage.getItem('token'); // Get token from storage\n\n      if (token) {\n        const response = await fetch('/api/verifyToken', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ token }),\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          setUser(data.user);\n        } else {\n          // Handle invalid token\n          console.error('Invalid token');\n        }\n      }\n      setLoading(false);\n    };\n\n    fetchUser();\n  }, []);\n\n  if (loading) return <p>Loading...</p>;\n  if (!user) return <p>Please log in.</p>;\n\n  return (\n    <div>\n      <h1>Welcome, {user.name}!</h1>\n    </div>\n  );\n};\n\nexport default ProtectedComponent;\n```\n\nThis approach keeps the sensitive JWT verification on the server, avoiding the `process is not defined` error.  Remember to set your `JWT_SECRET` in your `.env.local` file for Next.js.\n\n\n**External References:**\n\n* [Next.js API Routes Documentation](https://nextjs.org/docs/api-routes/introduction)\n* [jsonwebtoken documentation](https://www.npmjs.com/package/jsonwebtoken)\n* [Next.js Environment Variables](https://nextjs.org/docs/basic-features/environment-variables)\n\n\n**Explanation:**\n\nThe core issue is the separation of concerns between server-side and client-side code.  Node.js's `process` object is not available in the browser.  By moving the JWT verification to an API route, which runs on the server, we solve the problem. The client-side code simply communicates with the server to handle authentication.\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":125,"title":"Troubleshooting `ReferenceError: process is not defined` in a Next.js Browser-Side Script"}]
