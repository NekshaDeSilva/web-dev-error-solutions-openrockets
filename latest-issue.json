[{"body":"\nThis document details the creation of an expanding card effect using only CSS.  No JavaScript is required.  We'll leverage CSS transitions and transforms to achieve a smooth and visually appealing expansion when the card is hovered over. This technique is suitable for various design contexts, adding a subtle yet engaging interactive element to your web pages.\n\n## Description of the Styling\n\nThis effect creates a card that expands horizontally when the mouse hovers over it.  The expansion reveals additional content hidden initially. The transition is smooth and uses a simple scaling transform.\n\n## Full Code\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Expanding Card</title>\n<style>\n.card {\n  background-color: #f2f2f2;\n  border-radius: 5px;\n  padding: 20px;\n  margin: 20px;\n  transition: transform 0.3s ease-in-out; /* Smooth transition */\n  overflow: hidden; /* Hide content outside the initial card size */\n  width: 200px; /* Initial card width */\n}\n\n.card:hover {\n  transform: scaleX(1.2); /* Expand horizontally on hover */\n}\n\n.card-content {\n  white-space: nowrap; /* Prevent text wrapping for horizontal expansion */\n  overflow: hidden;\n}\n\n.card-hidden {\n  opacity: 0;\n  transform: translateX(20px);\n  transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;\n}\n\n.card:hover .card-hidden {\n  opacity: 1;\n  transform: translateX(0);\n}\n</style>\n</head>\n<body>\n\n<div class=\"card\">\n  <div class=\"card-content\">\n    <h3>This is the Card Title</h3>\n    <p>This is some initial text visible by default.</p>\n    <div class=\"card-hidden\">\n      <p>This additional text is hidden initially and reveals on hover.</p>\n      <p>More hidden text here.</p>\n    </div>\n  </div>\n</div>\n\n</body>\n</html>\n```\n\n\n## Explanation\n\n* **`.card`:** This class styles the base card with background color, padding, margin, and importantly, a transition property for `transform`.  The `overflow: hidden;` ensures that the expanding content doesn't spill outside the card's boundaries initially. The `width` sets the initial size.\n* **`.card:hover`:** This applies styles specifically when the mouse hovers over the `.card` element. `transform: scaleX(1.2);` scales the card horizontally by 120%, creating the expansion effect.\n* **`.card-content`:** This container ensures that the text inside doesn't wrap, allowing the horizontal scaling to work effectively.  `overflow: hidden` is crucial for this as well.\n* **`.card-hidden`:** This class styles the initially hidden content. `opacity: 0` makes it invisible, and `transform: translateX(20px)` shifts it slightly to the right, ensuring a smooth transition when revealed. The transition property mirrors the main card's transition for a coordinated effect.\n* **`.card:hover .card-hidden`:** This selector targets the `.card-hidden` content *only* when hovering over the parent `.card`.  It changes the `opacity` and `transform` to reveal the content smoothly.\n\n\n## External References\n\nWhile this technique doesn't rely on specific libraries, understanding CSS transitions and transforms is crucial.  Here are some helpful resources:\n\n* [MDN Web Docs - CSS Transitions](https://developer.mozilla.org/en-US/docs/Web/CSS/transition)\n* [MDN Web Docs - CSS Transforms](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":315,"title":"Creating a CSS-only Expanding Card with a Smooth Reveal"}]
