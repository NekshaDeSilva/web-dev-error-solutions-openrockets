[{"body":"\nThis document details the creation of a circular progress bar using only CSS.  No JavaScript is required. This technique leverages CSS's `clip-path` property and animations to create a visually appealing and performant progress indicator.\n\n**Description of the Styling:**\n\nThis progress bar uses a circular SVG as a base.  The `clip-path` property is applied to a pseudo-element (`::before`) of the SVG to reveal only a portion of the circle, creating the progress effect.  The animation smoothly increases the revealed portion, simulating the progress.  We'll use CSS variables to make it easily customizable.\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>CSS Circular Progress Bar</title>\n<style>\n  .progress-ring {\n    width: 150px;\n    height: 150px;\n    position: relative;\n  }\n\n  .progress-ring svg {\n    transform: rotate(-90deg); /* Start at top */\n  }\n\n  .progress-ring circle {\n    stroke-width: 10;\n    stroke: #eee; /* Track color */\n    fill: transparent;\n    --progress: 75; /* Customizable progress percentage */\n  }\n\n  .progress-ring circle::before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    clip-path: polygon(50% 50%, 50% 0, 100% 0, 100% 50%);\n    background-color: #4CAF50; /* Progress color */\n    transform-origin: 50% 100%;\n    transform: rotate(calc(var(--progress) * 360deg / 100));\n    animation: progress-animation var(--animation-duration) linear forwards;\n  }\n\n  @keyframes progress-animation {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(calc(var(--progress) * 360deg / 100));\n    }\n  }\n  .progress-ring.animated{\n      --animation-duration: 2s;\n  }\n</style>\n</head>\n<body>\n\n<div class=\"progress-ring animated\">\n  <svg viewBox=\"0 0 100 100\">\n    <circle cx=\"50\" cy=\"50\" r=\"40\" />\n  </svg>\n</div>\n\n\n</body>\n</html>\n```\n\n**Explanation:**\n\n* **SVG Circle:** The base is an SVG circle acting as the track.\n* **CSS Variables:** `--progress` controls the percentage, and `--animation-duration` controls the animation speed.\n* **`clip-path`:** The `polygon` shape creates a half-circle. Rotating this creates the progress effect.\n* **`transform: rotate()`:** Rotates the clipped portion based on the `--progress` value.\n* **`animation`:** The `progress-animation` keyframes smoothly animate the rotation.  The `forwards` fill mode keeps the final state after the animation.\n* **Class `animated`**: Added to control animation duration. By default animation is not applied. Add `animated` class to activate animation.\n\n\n**Links to Resources to Learn More:**\n\n* **MDN Web Docs on `clip-path`:** [https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path](https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path)\n* **MDN Web Docs on CSS Animations:** [https://developer.mozilla.org/en-US/docs/Web/CSS/animation](https://developer.mozilla.org/en-US/docs/Web/CSS/animation)\n* **CSS Tricks (general resource):** [https://css-tricks.com/](https://css-tricks.com/)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":663,"title":"Creating a CSS-Only Circular Progress Bar"}]
