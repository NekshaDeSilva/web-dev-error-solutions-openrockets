[{"body":"\nThis document details a CSS-only solution for creating an expanding card effect.  The card expands vertically to reveal more content when clicked, offering a smooth and engaging user experience without the need for JavaScript. This example utilizes standard CSS3, avoiding any framework like Tailwind.\n\n\n**Description of the Styling:**\n\nThe styling relies on CSS transitions and the `max-height` property.  Initially, the card has a small `max-height`, limiting its visible content.  On click, the `max-height` is dynamically changed to allow the full content to be displayed.  Transitions smooth out this change. We also use a simple hover effect to indicate interactivity.\n\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Expanding Card</title>\n<style>\n.card {\n  background-color: #f2f2f2;\n  border-radius: 5px;\n  padding: 20px;\n  transition: max-height 0.3s ease-in-out; /* Smooth transition */\n  overflow: hidden; /* Hide content that overflows */\n  max-height: 100px; /* Initial height */\n  cursor: pointer; /* Indicate it's clickable */\n}\n\n.card:hover {\n  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2); /* Add a hover effect */\n}\n\n.card.expanded {\n  max-height: 500px; /* Height when expanded */\n}\n\n.card-content {\n    /*This is just some placeholder content*/\n}\n</style>\n</head>\n<body>\n\n<div class=\"card\" onclick=\"this.classList.toggle('expanded')\">\n  <div class=\"card-content\">\n    <h2>Card Title</h2>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nec enim nec odio lacinia ultricies.  Nulla facilisi.  Donec velit ipsum, tincidunt nec eros vitae, varius tincidunt purus.  Suspendisse potenti.</p>\n    <p>More content here...  More content here...  More content here... More content here... </p>\n  </div>\n</div>\n\n</body>\n</html>\n```\n\n\n**Explanation:**\n\n* **`.card`**: This class styles the basic card appearance.  `transition` is crucial for the animation.  `overflow: hidden;` prevents content from spilling outside the initial height. `max-height` sets the initial restricted height.\n* **`.card:hover`**: This adds a subtle hover effect to improve usability.\n* **`.card.expanded`**:  This class is added/removed using JavaScript's `classList.toggle()` method. It sets the `max-height` to a larger value, revealing all content.\n* **`onclick=\"this.classList.toggle('expanded')\"`:** This inline JavaScript toggles the `expanded` class on the card when clicked.  This is a simple approach for demonstration; for larger projects consider separating JavaScript into a dedicated file.\n\n\n**Links to Resources to Learn More:**\n\n* **CSS Transitions:** [MDN Web Docs - CSS Transitions](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions)\n* **CSS `max-height` Property:** [MDN Web Docs - max-height](https://developer.mozilla.org/en-US/docs/Web/CSS/max-height)\n* **CSS `classList` API:** [MDN Web Docs - Element.classList](https://developer.mozilla.org/en-US/docs/Web/API/Element/classList)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":1044,"title":"Creating a CSS-only Expanding Card"}]
