[{"body":"\nThis document details the creation of a simple, yet visually appealing loading spinner using only CSS.  No JavaScript is required! This example uses CSS3 animations and transformations.\n\n**Description of the Styling:**\n\nThis loading spinner consists of four circles arranged in a square.  Each circle rotates independently, creating a dynamic and visually engaging loading animation.  The styling utilizes CSS variables for easy customization of colors and sizes.  The animation is smooth and subtle, suitable for various contexts.\n\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>CSS Loading Spinner</title>\n<style>\n:root {\n  --spinner-size: 50px;\n  --spinner-color: #007bff; /* Blue */\n}\n\n.loader {\n  display: inline-block;\n  position: relative;\n  width: var(--spinner-size);\n  height: var(--spinner-size);\n}\n\n.loader div {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background-color: var(--spinner-color);\n  opacity: 0.7;\n  animation: rotate 1s linear infinite;\n}\n\n.loader div:nth-child(1) {\n  animation-delay: 0s;\n  transform: translateX(-100%) translateY(-100%);\n}\n\n.loader div:nth-child(2) {\n  animation-delay: 0.2s;\n  transform: translateX(100%) translateY(-100%);\n}\n\n.loader div:nth-child(3) {\n  animation-delay: 0.4s;\n  transform: translateX(100%) translateY(100%);\n}\n\n.loader div:nth-child(4) {\n  animation-delay: 0.6s;\n  transform: translateX(-100%) translateY(100%);\n}\n\n@keyframes rotate {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n</style>\n</head>\n<body>\n\n<div class=\"loader\">\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n</div>\n\n</body>\n</html>\n```\n\n\n**Explanation:**\n\n* **`:root`**:  Defines CSS variables for easy customization of the spinner's size and color.\n* **`.loader`**:  Sets up the container for the spinner, using `inline-block` for easy integration into text flow.\n* **`.loader div`**: Styles each individual circle within the spinner.  `position: absolute` allows precise positioning.\n* **`:nth-child()`**:  Applies different animation delays to each circle, creating the staggered rotation effect.\n* **`@keyframes rotate`**: Defines the animation itself, rotating each circle 360 degrees continuously.\n\n\n**Links to Resources to Learn More:**\n\n* **MDN Web Docs on CSS Animations:** [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations)\n* **MDN Web Docs on CSS Transforms:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transform](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n* **CSS-Tricks (General CSS resource):** [https://css-tricks.com/](https://css-tricks.com/)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":403,"title":"Creating a Pure CSS Loading Spinner"}]
