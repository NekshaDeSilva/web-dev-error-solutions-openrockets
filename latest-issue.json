[{"body":"\nThis document details the creation of an expanding card using only CSS.  The card expands smoothly when hovered over, revealing additional content. We'll leverage CSS transitions and transforms for a polished effect. No JavaScript required!\n\n**Description of the Styling:**\n\nThe card consists of a main container that holds the front and back content.  The front displays a summary, while the back expands to reveal more detailed information. The expansion utilizes a CSS transition on `transform: scale()` and `opacity` to create a smooth, visually appealing effect.  The design uses a subtle shadow to enhance depth.\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Expanding Card</title>\n<style>\n.card {\n  width: 300px;\n  height: 200px;\n  perspective: 1000px; /* Enables 3D transforms */\n  border-radius: 8px;\n  overflow: hidden; /* Hides overflowing content during transition */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.card-front, .card-back {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden; /* Prevents flickering during transition */\n  transition: transform 0.5s ease-in-out, opacity 0.5s ease-in-out; /* Smooth transition */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n}\n\n.card-front {\n  background-color: #f0f0f0;\n  color: #333;\n}\n\n.card-back {\n  background-color: #ddd;\n  color: #333;\n  transform: rotateY(180deg); /* Initially hidden */\n  opacity: 0; /* Initially hidden */\n}\n\n.card:hover .card-front {\n  transform: rotateY(-180deg); /* Rotate front to show back */\n  opacity: 0; /* Fade out front */\n}\n\n.card:hover .card-back {\n  transform: rotateY(0deg); /* Rotate back to be visible */\n  opacity: 1; /* Fade in back */\n}\n\n.card-content {\n  text-align: center;\n  padding: 20px;\n}\n</style>\n</head>\n<body>\n\n<div class=\"card\">\n  <div class=\"card-front\">\n    <div class=\"card-content\">\n      <h2>Front</h2>\n      <p>Summary of the content.</p>\n    </div>\n  </div>\n  <div class=\"card-back\">\n    <div class=\"card-content\">\n      <h2>Back</h2>\n      <p>More detailed information here. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n    </div>\n  </div>\n</div>\n\n</body>\n</html>\n```\n\n\n**Explanation:**\n\n* **`perspective`:**  Gives the card a 3D space for the rotation to occur.\n* **`backface-visibility: hidden`:** Prevents the back of the card from being visible during the transition.\n* **`transition`:**  Smoothly animates the `transform` and `opacity` properties over 0.5 seconds.\n* **`transform: rotateY()`:** Rotates the card around the Y-axis to create the flip effect.\n* **`opacity`:** Controls the visibility of the front and back sides during the transition.\n* **The hover effect:**  The `:hover` pseudo-class triggers the rotation and opacity changes when the mouse hovers over the card.\n\n\n**Links to Resources to Learn More:**\n\n* [MDN Web Docs - CSS Transforms](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n* [MDN Web Docs - CSS Transitions](https://developer.mozilla.org/en-US/docs/Web/CSS/transition)\n* [CSS-Tricks - Understanding CSS Transforms](https://css-tricks.com/almanac/properties/t/transform/)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":420,"title":"Creating a CSS-only Expanding Card with a Subtle Reveal"}]
