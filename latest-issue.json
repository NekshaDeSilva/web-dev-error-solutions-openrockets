[{"body":"\nThis document details a CSS-only solution to create an expanding card effect.  No JavaScript is required.  The effect uses CSS transitions and transforms to smoothly expand a card when hovered over, revealing hidden content.  We'll be using standard CSS3 for this example.\n\n\n**Description of the Styling:**\n\nThe styling employs a container div for the card.  Inside, there's a \"front\" section displaying the main content visible initially, and a \"back\" section containing the expanded content, initially hidden.  We use `transform: rotateY()` and transitions to create the flipping animation.  The hover effect triggers the transformation, revealing the back of the card.\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>CSS Expanding Card</title>\n<style>\n.card {\n  width: 200px;\n  height: 150px;\n  perspective: 1000px; /* Necessary for 3D transformations */\n  margin: 20px;\n}\n\n.card-inner {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  transition: transform 0.8s; /* Smooth transition for the flip */\n  transform-style: preserve-3d; /* Enables 3D transformations on child elements */\n}\n\n.card-front, .card-back {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden; /* Prevents the back from being visible during transition */\n}\n\n.card-front {\n  background-color: #f0f0f0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #333;\n  font-size: 1.2em;\n}\n\n.card-back {\n  background-color: #ddd;\n  transform: rotateY(180deg); /* Initially rotated to the back */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #333;\n  font-size: 1em;\n}\n\n.card:hover .card-inner {\n  transform: rotateY(180deg); /* Flip on hover */\n}\n</style>\n</head>\n<body>\n\n<div class=\"card\">\n  <div class=\"card-inner\">\n    <div class=\"card-front\">Front</div>\n    <div class=\"card-back\">Back: This is the expanded content!</div>\n  </div>\n</div>\n\n</body>\n</html>\n```\n\n\n**Explanation:**\n\n* **`perspective`**: This property creates the 3D space for the flip effect.\n* **`transform-style: preserve-3d`**: This ensures that child elements are also transformed in 3D space.\n* **`backface-visibility: hidden`**: This prevents the back of the card from being visible before the flip.\n* **`transition`**: This property provides a smooth animation for the `transform` property.\n* **`transform: rotateY()`**: This rotates the card around the Y-axis to create the flip effect.\n* **The hover event**: This triggers the rotation, revealing the hidden content.\n\n\n**Links to Resources to Learn More:**\n\n* **MDN Web Docs - CSS Transforms:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transform](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n* **MDN Web Docs - CSS Transitions:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transition](https://developer.mozilla.org/en-US/docs/Web/CSS/transition)\n* **CSS-Tricks - 3D Transforms:** [https://css-tricks.com/almanac/properties/t/transform/](https://css-tricks.com/almanac/properties/t/transform/)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":1003,"title":"Creating a CSS-only Expanding Card"}]
