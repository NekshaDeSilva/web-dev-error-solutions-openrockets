[{"body":"\nThis document details how to create a circular progress bar using only CSS.  This avoids the need for JavaScript, making it lightweight and efficient. We'll use CSS3 properties to achieve the circular shape and animation.\n\n\n**Description of the Styling:**\n\nThis technique uses a combination of `border-radius`, `transform`, and `animation` properties to create a visually appealing circular progress bar. A pseudo-element (`::before`) is used to create the animated progress ring.  The percentage of completion is controlled by a CSS variable, allowing for easy modification.\n\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>CSS Circular Progress Bar</title>\n<style>\n.progress-ring {\n  width: 150px;\n  height: 150px;\n  border-radius: 50%;\n  background-color: #f0f0f0; /* Light gray background */\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.progress-ring::before {\n  content: \"\";\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  border: 10px solid transparent; /* Adjust border width as needed */\n  border-top-color: #007bff; /* Blue progress color */\n  animation: progress-bar 2s linear forwards;\n}\n\n/* Adjust percentage via CSS variable */\n:root {\n    --progress-percentage: 75; /* Percentage complete (0-100) */\n}\n\n@keyframes progress-bar {\n  to {\n    transform: rotate(calc(var(--progress-percentage) * 3.6deg));\n  }\n}\n\n</style>\n</head>\n<body>\n\n<div class=\"progress-ring\"></div>\n\n</body>\n</html>\n```\n\n**Explanation:**\n\n* **`.progress-ring`:** This class sets the basic dimensions, shape, and background of the circular progress bar.  `position: relative` is crucial for positioning the pseudo-element.\n\n* **`.progress-ring::before`:** This pseudo-element creates the circular progress ring.  `border-radius: 50%` makes it circular.  `border-top-color` sets the color of the progress bar.  The `animation` property applies the `progress-bar` animation.\n\n* **`:root { --progress-percentage: 75; }`:**  This sets a CSS variable to control the progress percentage.  Changing this value will dynamically adjust the progress bar.\n\n* **`@keyframes progress-bar`:** This defines the animation.  `transform: rotate()` rotates the border, creating the progress effect. `calc(var(--progress-percentage) * 3.6deg)` calculates the rotation angle based on the percentage (360 degrees / 100% = 3.6 degrees per percentage point).  `linear` ensures a smooth animation. `forwards` keeps the animation at its final state.\n\n\n**Links to Resources to Learn More:**\n\n* **CSS Animations:** [MDN Web Docs - CSS Animations](https://developer.mozilla.org/en-US/docs/Web/CSS/animation)\n* **CSS Pseudo-elements:** [MDN Web Docs - Pseudo-elements](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements)\n* **CSS Variables (Custom Properties):** [MDN Web Docs - CSS Custom Properties](https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties)\n* **Understanding `calc()` in CSS:** [MDN Web Docs - calc()](https://developer.mozilla.org/en-US/docs/Web/CSS/calc)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":891,"title":"Creating a CSS-only Circular Progress Bar"}]
