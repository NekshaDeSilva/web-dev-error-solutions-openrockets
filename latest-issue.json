[{"body":"\nThis document details how to create an expanding card effect using only CSS.  This effect showcases a smooth expansion of the card content upon hover, revealing hidden details with a subtle animation.  The example uses plain CSS, but the principles can be easily adapted to frameworks like Tailwind CSS.\n\n**Description of the Styling:**\n\nThe card consists of two main parts: a front face and a back face.  The front face displays a summary, while the back face reveals more detailed information.  The transition effect leverages CSS transforms and transitions to smoothly expand the card and rotate it, revealing the back face on hover. We use `transform-style: preserve-3d;` to keep the front and back faces in a 3D space, allowing the rotation to happen realistically.  The animation is subtle and user-friendly, making for a clean and interactive experience.\n\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Expanding Card</title>\n<style>\n.card {\n  perspective: 1000px; /* Necessary for 3D transforms */\n  width: 300px;\n  height: 200px;\n  position: relative;\n  transition: transform 0.5s ease-in-out; /* Smooth transition */\n}\n\n.card-front, .card-back {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden; /* Hide the back face initially */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transform-style: preserve-3d; /* Keep faces in 3D space */\n}\n\n.card-front {\n  background-color: #4CAF50;\n  color: white;\n  border-radius: 5px;\n}\n\n.card-back {\n  background-color: #2196F3;\n  color: white;\n  border-radius: 5px;\n  transform: rotateY(180deg); /* Rotate to the back initially */\n}\n\n.card:hover {\n  transform: rotateY(180deg); /* Rotate on hover to reveal the back */\n}\n\n.card-content {\n  text-align: center;\n  padding: 20px;\n}\n</style>\n</head>\n<body>\n\n<div class=\"card\">\n  <div class=\"card-front\">\n    <div class=\"card-content\">\n      <h2>Front</h2>\n      <p>Click or hover to reveal more!</p>\n    </div>\n  </div>\n  <div class=\"card-back\">\n    <div class=\"card-content\">\n      <h2>Back</h2>\n      <p>This is the detailed information revealed on hover.</p>\n    </div>\n  </div>\n</div>\n\n</body>\n</html>\n```\n\n**Explanation:**\n\n1. **`perspective`:** This property sets the distance from the viewer to the 3D scene, creating the depth effect.\n2. **`backface-visibility: hidden;`:** This hides the back face when it's not visible, improving performance and preventing flickering.\n3. **`transform: rotateY(180deg);`:** This rotates the back face 180 degrees around the Y-axis, placing it on the back.\n4. **`transform-style: preserve-3d;`:** This keeps both the front and back faces in the 3D space so the rotation looks realistic.\n5. **`transition: transform 0.5s ease-in-out;`:** This creates a smooth transition for the `transform` property over 0.5 seconds.\n6. **`:hover`:** The hover state triggers the `transform: rotateY(180deg);` which flips the card.\n\n\n**Links to Resources to Learn More:**\n\n* [MDN Web Docs on CSS Transforms](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n* [MDN Web Docs on CSS Transitions](https://developer.mozilla.org/en-US/docs/Web/CSS/transition)\n* [CSS-Tricks](https://css-tricks.com/) (A great resource for CSS techniques)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":671,"title":"Creating a CSS-only Expanding Card with a Subtle Reveal"}]
