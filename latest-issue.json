[{"body":"\nThis document details how to create an expanding card using only CSS.  The card reveals its content with a subtle animation, providing a visually engaging user experience. This example uses pure CSS3, avoiding JavaScript for a lightweight and performant solution.\n\n**Description of the Styling:**\n\nThe card utilizes CSS transitions and transforms to achieve the expanding effect.  When the card is hovered over, its height expands, revealing hidden content.  A subtle box-shadow effect is added to enhance the visual appeal.  The color scheme is minimal, but can be easily adjusted to match your project's branding.\n\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Expanding Card</title>\n<style>\n.card {\n  background-color: #f2f2f2;\n  border-radius: 8px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  overflow: hidden; /* Hide content that overflows */\n  transition: height 0.3s ease-in-out; /* Add smooth transition */\n  height: 150px; /* Initial height */\n  width: 300px;\n}\n\n.card:hover {\n  height: 300px; /* Expanded height on hover */\n}\n\n.card-content {\n  padding: 20px;\n  height: 100%; /* Ensure content fills the card's height */\n  display: flex;\n  flex-direction: column; /* Align content vertically */\n  justify-content: space-between; /* Distribute space between items */\n}\n\n.card-title {\n  font-size: 1.2em;\n  font-weight: bold;\n  margin-bottom: 10px;\n}\n\n.card-text {\n  font-size: 1em;\n  margin-bottom: 10px;\n}\n\n.card-button {\n  background-color: #4CAF50;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n</style>\n</head>\n<body>\n\n<div class=\"card\">\n  <div class=\"card-content\">\n    <h2 class=\"card-title\">Expanding Card</h2>\n    <p class=\"card-text\">This is a simple expanding card created with pure CSS.  Hover over the card to see it expand and reveal more content.</p>\n    <button class=\"card-button\">Learn More</button>\n  </div>\n</div>\n\n</body>\n</html>\n```\n\n**Explanation:**\n\n* **`transition: height 0.3s ease-in-out;`**: This line adds a smooth transition to the card's height change over 0.3 seconds using an ease-in-out timing function.\n* **`height: 150px;` & `height: 300px;`**:  These lines control the initial and expanded heights of the card.  Adjust these values to your needs.\n* **`overflow: hidden;`**: This prevents content from overflowing the card before it expands.\n* **`display: flex;`, `flex-direction: column;`, `justify-content: space-between;`**: These flexbox properties ensure that the content within the card is neatly arranged vertically, and the space between elements is distributed evenly.\n\n\n**Links to Resources to Learn More:**\n\n* **CSS Transitions:** [MDN Web Docs - CSS Transitions](https://developer.mozilla.org/en-US/docs/Web/CSS/transition)\n* **CSS Transforms:** [MDN Web Docs - CSS Transforms](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n* **CSS Flexbox:** [CSS-Tricks - A Complete Guide to Flexbox](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":851,"title":"Creating a CSS-only Expanding Card with a Subtle Reveal"}]
