[{"body":"\nThis document addresses a common error encountered when attempting to use Next.js's `next/server` API within API routes.  The error typically manifests as a `SyntaxError: Cannot use import statement outside a module` or a similar message indicating that the `next/server` module is inaccessible within the context of an API route file.  This happens because API routes, by default, are executed in a Node.js environment which doesn't support the ES modules syntax (`import`/`export`) used by `next/server`.\n\n\n**Description of the Error:**\n\nThe core issue is attempting to use functionalities from `next/server` (designed for middleware and edge functions) within a traditional API route.  `next/server` relies on the Edge Runtime environment for features like `NextResponse`, which isn't available in the serverless environment used by API routes.\n\n\n**Code Example (Incorrect):**\n\n```javascript\n// pages/api/hello.js (Incorrect - will throw an error)\nimport { NextResponse } from 'next/server';\n\nexport default function handler(req, res) {\n  const response = NextResponse.json({ message: 'Hello from API Route!' });\n  // ... Error here because NextResponse is not available.\n  res.status(200).json(response) \n}\n```\n\n**Fixing the Error Step-by-Step:**\n\nInstead of `next/server`, API routes should utilize the standard Node.js `http` or `https` modules for creating responses.\n\n\n**Code Example (Corrected):**\n\n```javascript\n// pages/api/hello.js (Corrected)\nexport default function handler(req, res) {\n  const data = { message: 'Hello from API Route!' };\n  res.status(200).json(data); \n}\n```\n\n**Explanation:**\n\nThe corrected code leverages the built-in `res` object provided by the API route's request handler.  The `res.status()` method sets the HTTP status code, and `res.json()` directly sends a JSON response.  This approach is compatible with the serverless Node.js environment of API routes.  Importantly, there is no need for `next/server` here.\n\n\n**External References:**\n\n* **Next.js API Routes Documentation:** [https://nextjs.org/docs/api-routes/introduction](https://nextjs.org/docs/api-routes/introduction)  This official documentation explains the differences between API routes and other Next.js features.\n* **Next.js Middleware Documentation:** [https://nextjs.org/docs/app/building-your-application/routing/middleware](https://nextjs.org/docs/app/building-your-application/routing/middleware) This explains where `next/server` is appropriate.\n* **Node.js `http` Module Documentation:** [https://nodejs.org/api/http.html](https://nodejs.org/api/http.html)  (If you need more control than `res.json()`)\n\n**Important Note:** If you need edge-side functionalities (like manipulating headers before the response reaches the client), you should use Next.js Middleware instead of API routes.\n\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":1145,"title":"Next.js Middleware: Handling `next/server` Import Errors in API Routes"}]
