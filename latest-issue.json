[{"body":"\nThis challenge focuses on styling a multi-level nested list to create an accordion-like effect using CSS.  Each list item will initially only show its title, and clicking the title will reveal its sub-items. We'll achieve this using CSS only, without JavaScript. This example utilizes CSS variables for easier customization.\n\n**Description of the Styling:**\n\nThe styling aims for a clean, modern look.  Each list item will have a distinct background color,  a subtle hover effect, and the sub-lists will slide down smoothly when their parent is clicked. We use a combination of CSS variables and the `:target` pseudo-class to manage the accordion behavior.  The styling will be concise and efficient, leveraging CSS's power to manage complex interactions.\n\n\n**Full Code (CSS Only):**\n\n```css\n:root {\n  --primary-color: #3498db; /* Primary color */\n  --secondary-color: #ecf0f1; /* Secondary color */\n  --text-color: #333; /* Text color */\n}\n\nbody {\n  font-family: sans-serif;\n  line-height: 1.6;\n  margin: 20px;\n}\n\nul {\n  list-style: none;\n  padding: 0;\n}\n\nli {\n  margin-bottom: 10px;\n  background-color: var(--secondary-color);\n  padding: 10px;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\nli > ul {\n  max-height: 0;\n  overflow: hidden;\n  transition: max-height 0.3s ease-out;\n}\n\nli > ul.open {\n  max-height: 200px; /* Adjust as needed */\n}\n\n\nli a {\n  text-decoration: none;\n  color: var(--text-color);\n  display: block; /* Occupy the whole line */\n}\n\nli:hover {\n  background-color: var(--primary-color);\n  color: white;\n}\n\nli.active a {\n  color: white;\n}\n\nli.active {\n  background-color: var(--primary-color);\n}\n\n/* Styling for different list levels (can be expanded) */\nli ul li {\n  margin-left: 20px;\n}\nli ul li ul li {\n  margin-left: 40px;\n}\n\n```\n\n**HTML Structure (example):**\n\n```html\n<ul>\n  <li><a href=\"#section1\">Section 1</a>\n    <ul id=\"section1\">\n      <li><a href=\"#subsection1a\">Subsection 1a</a></li>\n      <li><a href=\"#subsection1b\">Subsection 1b</a>\n        <ul id=\"subsection1b\">\n          <li><a href=\"#subsubsection1b1\">Sub-subsection 1b1</a></li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li><a href=\"#section2\">Section 2</a>\n    <ul id=\"section2\">\n      <li><a href=\"#subsection2a\">Subsection 2a</a></li>\n    </ul>\n  </li>\n</ul>\n```\n\n**Explanation:**\n\n* **CSS Variables:**  Using `:root` to define variables allows for easy customization of colors and other styles.\n* **`max-height` and `overflow: hidden`:** These properties initially hide the sub-lists.\n* **`transition`:** This provides a smooth animation when the `max-height` changes.\n* **`:target` (implicitly used in HTML):** The `#section1`, `#section2`, etc.  IDs in the HTML, combined with the `href` attributes create the accordion functionality. When a link is clicked, the browser navigates to the corresponding section, causing the related `ul` to be displayed.  Javascript is NOT used here.  The JavaScript approach would use event listeners for a more dynamic experience but this CSS-only method demonstrates a powerful CSS feature.\n* **JavaScript Enhancement (optional):** For a more interactive approach, you could add JavaScript to handle the opening and closing of the accordion sections more smoothly and possibly include additional animation effects beyond the simple `max-height` transition.\n\n**Links to Resources to Learn More:**\n\n* **MDN Web Docs - CSS Transitions:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transition](https://developer.mozilla.org/en-US/docs/Web/CSS/transition)\n* **MDN Web Docs - :target Pseudo-Class:** [https://developer.mozilla.org/en-US/docs/Web/CSS/:target](https://developer.mozilla.org/en-US/docs/Web/CSS/:target)\n* **CSS Tricks:** [https://css-tricks.com/](https://css-tricks.com/) (A great resource for all things CSS)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":1455,"title":"CSS Challenge:  Multi-level Nested List with Stylish Accordion"}]
